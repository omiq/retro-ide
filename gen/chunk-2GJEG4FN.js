import{H as u}from"./chunk-KXQZZRQB.js";(function(){window.c64_debug={generateIframeURL:async(s,e=!0)=>{let o="c64-iframe.html";if(s.length>1e3)try{let t=(await import("./pako.esm-IRLKWIKL.js")).gzip(s),a=Array.from(t).map(i=>i.toString(16).padStart(2,"0")).join("");return console.log(`C64 debug: Original size: ${s.length} bytes, Compressed: ${t.length} bytes (${Math.round((1-t.length/s.length)*100)}% reduction)`),`${o}?gzip=${encodeURIComponent(a)}`}catch(n){console.error("C64 debug: Gzip compression failed, falling back to base64:",n);let t=String.fromCharCode.apply(null,Array.from(s)),a=btoa(t);return`${o}?program=${encodeURIComponent(a)}`}else if(e){let n=String.fromCharCode.apply(null,Array.from(s)),t=btoa(n);return`${o}?program=${encodeURIComponent(t)}`}else{let n=Array.from(s).map(t=>t.toString(16).padStart(2,"0")).join(" ");return`${o}?hex=${encodeURIComponent(n)}`}},openIframeWithCurrentProgram:()=>{var e;let s=(e=window.IDE)==null?void 0:e.getCurrentOutput();if(s&&s instanceof Uint8Array){let o=window.c64_debug.generateIframeURL(s);return console.log("Opened C64 iframe with current program:",o),o}else return console.error("No compiled program available. Compile first."),null},getCurrentProgramHex:()=>{var e;let s=(e=window.IDE)==null?void 0:e.getCurrentOutput();if(s&&s instanceof Uint8Array){let o=Array.from(s).map(n=>n.toString(16).padStart(2,"0")).join(" ");return console.log("Current program hex:",o),o}else return console.error("No compiled program available. Compile first."),null},getCurrentProgramInfo:()=>{var e;let s=(e=window.IDE)==null?void 0:e.getCurrentOutput();if(s&&s instanceof Uint8Array){if(console.log("Current program info:"),console.log("  Size:",s.length,"bytes"),console.log("  First 16 bytes:",Array.from(s.slice(0,16)).map(o=>o.toString(16).padStart(2,"0")).join(" ")),s.length>=2){let o=s[1]<<8|s[0];console.log("  Load address: 0x"+o.toString(16))}if(s.length>1e3)try{import("./pako.esm-IRLKWIKL.js").then(o=>{let n=o.gzip(s),t=Array.from(n).map(r=>r.toString(16).padStart(2,"0")).join(""),a=Math.round((1-n.length/s.length)*100),i=`c64-iframe.html?gzip=${encodeURIComponent(t)}`.length;console.log("  Compression test:"),console.log("    Original size:",s.length,"bytes"),console.log("    Compressed size:",n.length,"bytes"),console.log("    Compression ratio:",a+"%"),console.log("    URL length:",i,"characters"),console.log("    URL limit safe:",i<8e3?"YES":"NO")}).catch(o=>{console.log("  Compression test failed:",o)})}catch(o){console.log("  Compression test failed:",o)}return{size:s.length,loadAddress:s.length>=2?s[1]<<8|s[0]:null,firstBytes:Array.from(s.slice(0,16))}}else return console.error("No compiled program available. Compile first."),null}},console.log("\u2705 C64 debug functions added to window.c64_debug"),console.log("Available functions:"),console.log("  - c64_debug.generateIframeURL(programData, useBase64)"),console.log("  - c64_debug.openIframeWithCurrentProgram()"),console.log("  - c64_debug.getCurrentProgramHex()"),console.log("  - c64_debug.getCurrentProgramInfo()")})();var c=class{constructor(){this.module=null;this.canvas=null;this.running=!1;this.joymask0=0;this.joymask1=0;this.name="C64 (chips-test)",this.description="Commodore 64 emulator using chips-test WebAssembly"}getName(){return this.name}getDescription(){return this.description}async init(){try{console.log("Initializing chips-test C64 emulator..."),this.canvas=document.createElement("canvas"),this.canvas.id="canvas",this.canvas.width=640,this.canvas.height=400,this.canvas.style.border="1px solid #333",this.canvas.style.width="100%",this.canvas.style.height="auto",this.canvas.style.maxWidth="800px",this.canvas.style.maxHeight="600px";let e=document.getElementById("c64-chips-div"),o=document.getElementById("c64-chips-screen");if(e&&o?(o.appendChild(this.canvas),e.style.display="block",console.log("\u2705 Added C64 canvas to pre-existing div")):(document.body.appendChild(this.canvas),console.log("\u26A0\uFE0F C64 div not found, using body fallback")),!window.c64_module){let t=document.createElement("script");t.src=`res/c64.js?t=${Date.now()}`,t.async=!0,await new Promise((a,i)=>{t.onload=()=>{setTimeout(()=>{if(typeof window.c64_quickload=="function"){console.log("C64 quickload function found - using direct access"),window.c64_module=window,a();return}if(typeof window.Module!="undefined"&&window.Module){console.log("C64 Module found - using Module object"),window.c64_module=window.Module,a();return}console.log("C64 module detection failed, but emulator is running - using window fallback"),window.c64_module=window,a()},500)},t.onerror=()=>i(new Error("Failed to load C64 module")),document.head.appendChild(t)})}let n=window.fetch;if(window.fetch=function(t,a){if(typeof t=="string"&&(t.includes("c64.wasm")||t.includes("c64.js"))){let i=t.includes("?")?"&":"?";t=`${t}${i}t=${Date.now()}`}return n.call(this,t,a)},this.module=window.c64_module,this.module&&this.module._main)this.module._main(0,0),console.log("C64 chips-test emulator initialized successfully");else if(this.module===window)console.log("C64 chips-test emulator using window fallback - already running"),await new Promise(t=>setTimeout(t,500)),typeof window.Module!="undefined"&&window.Module&&(console.log("Found Module object, setting module reference"),this.module=window.Module),await new Promise(t=>setTimeout(t,1e3)),console.log("Skipping URL parameter parser to avoid DOM access issues");else throw new Error("C64 module not properly initialized")}catch(e){throw console.error("Failed to initialize C64 chips-test emulator:",e),e}}run(){this.module&&this.running||(this.running=!0,this.module&&typeof this.module.c64_run=="function"?this.module.c64_run():typeof window.c64_run=="function"&&window.c64_run())}stop(){this.running=!1}reset(){this.module&&typeof this.module.c64_reset=="function"?this.module.c64_reset():typeof window.c64_reset=="function"&&window.c64_reset()}loadProgram(e){if(console.log("=== C64 LOAD PROGRAM DEBUG (UPDATED VERSION) ==="),console.log("\u2705 NEW FOCUS PREVENTION ACTIVE ==="),console.log("C64 loadProgram called with",e.length,"bytes"),console.log("First few bytes:",e.slice(0,10)),console.log("\u{1F504} Resetting emulator state to prevent automatic execution"),this.reset(),console.log("Available window functions:",Object.keys(window).filter(i=>i.includes("c64"))),console.log("Available module functions:",this.module?Object.keys(this.module).filter(i=>i.includes("c64")):"No module"),typeof window.Module!="undefined"&&window.Module?(console.log("Module object available:",Object.keys(window.Module).filter(i=>i.includes("c64"))),console.log("All Module functions:",Object.keys(window.Module).slice(0,20))):console.log("Module object not available"),console.log("Window.Module exists:",typeof window.Module!="undefined"),typeof window.Module!="undefined"&&console.log("Module object keys:",Object.keys(window.Module)),window.c64_module){console.log("c64_module keys:",Object.keys(window.c64_module));let r=Object.keys(window.c64_module).filter(l=>l.toLowerCase().includes("quickload")||l.toLowerCase().includes("load")||l.toLowerCase().includes("prg")||l.toLowerCase().includes("rom"));console.log("Quickload candidates:",r);for(let l of r){let m=window.c64_module[l];typeof m=="function"&&console.log(`Found function: ${l}`,m)}}let o;e.length>=2&&e[0]===1&&e[1]===8?(console.log("Program already has PRG header, using as-is"),o=e):(console.log("Adding PRG header to program"),o=new Uint8Array(e.length+2),o[0]=1,o[1]=8,o.set(e,2)),console.log("PRG data length:",o.length),console.log("PRG header:",o[0],o[1]),console.log("First few bytes of program:",o.slice(0,10));let n=!1,a=new URLSearchParams(window.location.search).get("input");if(a){if(console.log("Found input parameter:",a),this.module&&typeof this.module.__sargs_add_kvp=="function")try{this.module.__sargs_add_kvp("input",a),console.log("\u2705 Successfully added input parameter to module")}catch(i){console.log("\u274C Error adding input parameter to module:",i)}if(typeof window.h&&typeof window.h.__sargs_add_kvp=="function")try{window.h.__sargs_add_kvp("input",a),console.log("\u2705 Successfully added input parameter to window.h")}catch(i){console.log("\u274C Error adding input parameter to window.h:",i)}}if(this.module&&typeof this.module.c64_quickload=="function"&&(console.log("Calling c64_quickload via module"),this.module.c64_quickload(o),n=!0),!n&&typeof window.c64_quickload=="function"&&(console.log("Calling c64_quickload via window"),window.c64_quickload(o),n=!0),!n&&typeof window.Module!="undefined"&&window.Module){let i=window.Module;typeof i.c64_quickload=="function"&&(console.log("Calling c64_quickload via Module object"),i.c64_quickload(o),n=!0)}if(!n&&this.module&&this.module._c64_quickload&&(console.log("Calling c64_quickload via WebAssembly module"),this.module._c64_quickload(o),n=!0),!n&&typeof window.Module!="undefined"&&window.Module){let i=window.Module;i.exports&&i.exports.c64_quickload&&(console.log("Calling c64_quickload via Module.exports"),i.exports.c64_quickload(o),n=!0)}if(!n&&typeof window.Module!="undefined"&&window.Module){let i=window.Module;try{console.log("Attempting to call c64_quickload directly on Module"),i.c64_quickload(o),n=!0}catch(r){console.log("Direct Module call failed:",r)}}if(!n&&typeof window.Module!="undefined"&&window.Module){let i=window.Module;try{console.log("Attempting to allocate memory and call c64_quickload");let r=i._malloc(o.length);i.HEAPU8.set(o,r),i.c64_quickload(r,o.length),i._free(r),n=!0}catch(r){console.log("Memory allocation approach failed:",r)}}if(!n)try{console.log("Attempting to trigger drag-and-drop functionality");let i=new File([o],"program.prg",{type:"application/octet-stream"}),r=new Event("drop",{bubbles:!0});Object.defineProperty(r,"dataTransfer",{value:{files:[i],getData:()=>null}});let l=this.getCanvas();l&&(l.dispatchEvent(r),n=!0,console.log("\u2705 Program loaded successfully - no automatic RUN command sent"))}catch(i){console.log("Drag-and-drop trigger failed:",i)}if(!n){console.error("c64_quickload function not found!"),console.log("Trying alternative function names...");let i=["quickload","load_prg","load_program","load_rom"];for(let r of i){if(typeof window[r]=="function"){console.log(`Found alternative function: ${r}`),window[r](o);return}if(this.module&&typeof this.module[r]=="function"){console.log(`Found alternative function on module: ${r}`),this.module[r](o);return}}console.error("No quickload function found with any name!")}}getCanvas(){return this.canvas}getFPS(){return this.running?50:0}read(e){return this.module&&typeof this.module.c64_read_memory=="function"?this.module.c64_read_memory(e):typeof window.c64_read_memory=="function"?window.c64_read_memory(e):0}write(e,o){this.module&&this.module.c64_write_memory&&this.module.c64_write_memory(e,o)}getCPUState(){return this.module&&this.module.c64_get_cpu_state?this.module.c64_get_cpu_state():{PC:0,SP:0}}saveState(){return{c:this.getCPUState(),b:new Uint8Array(0)}}loadState(e){this.module&&this.module.c64_load_state&&e.b&&this.module.c64_load_state(e.b)}destroy(){this.stop(),this.module=null,this.canvas=null;let e=document.getElementById("c64-chips-div");e&&(e.style.display="none",console.log("\u2705 Hidden C64 chips div"))}setKeyInput(e,o,n){if(!(e==16||e==17||e==18||e==224)){var t=0,a=0;e==37&&(e=8,t=4),e==38&&(e=11,t=1),e==39&&(e=9,t=8),e==40&&(e=10,t=2),e==32&&(t=16),e==65&&(e=65,a=4),e==87&&(e=87,a=1),e==68&&(e=68,a=8),e==83&&(e=83,a=2),e==69&&(a=16),e==113&&(e=241),e==115&&(e=243),e==119&&(e=245),e==121&&(e=247),n&1?(this.joymask0|=t,this.joymask1|=a):n&2&&(this.joymask0&=~t,this.joymask1&=~a),this.module&&typeof this.module.c64_joystick=="function"?this.module.c64_joystick(this.joymask0,this.joymask1):window.h&&typeof window.h.c64_joystick=="function"&&window.h.c64_joystick(this.joymask0,this.joymask1)}}};var p=[{id:"helloc.c",name:"Hello World",category:"C Tutorial"},{id:"petscii.c",name:"PETSCII Symbols"},{id:"demo.c",name:"Scrolling Text and Music Demo"},{id:"wordy.c",name:"Word Game"},{id:"adventure.c",name:"Text Adventure"},{id:"hello.bas",name:"Hello World (BASIC)",category:"BASIC Tutorial"},{id:"dartmouth.bas",name:"BASIC Tutorial (BASIC)"},{id:"colors.bas",name:"Color Demo (BASIC)"},{id:"game.bas",name:"Number Game (BASIC)"},{id:"labels.bas",name:"Label Demo (BASIC)"},{id:"lander.bas",name:"Space Lander Game (BASIC)"},{id:"adventure.bas",name:"Adventure Game (BASIC)"},{id:"trek64.bas",name:"Star Trek (BASIC)"},{id:"controlcodes.bas",name:"Control Codes Demo (BASIC)"},{id:"hello.acme",name:"Hello World (ACME)",category:"Assembly (ACME)"},{id:"screen_ram.c",name:"Screen RAM",category:"8-bit Workshop Demos"},{id:"siegegame.c",name:"Siege Game"},{id:"joymove.c",name:"Sprite Movement"},{id:"sprite_collision.c",name:"Sprite Collision"},{id:"scroll1.c",name:"Scrolling (Single Buffer)"},{id:"test_setirq.c",name:"Raster Interrupts"},{id:"test_display_list.c",name:"Raster IRQ Library"},{id:"scrolling_text.c",name:"Big Scrolling Text"},{id:"side_scroller.c",name:"Side-Scrolling Game"},{id:"scroll2.c",name:"Scrolling (Double Buffer)"},{id:"scroll3.c",name:"Scrolling (Multidirectional)"},{id:"scroll4.c",name:"Scrolling (Color RAM Buffering)"},{id:"scroll5.c",name:"Scrolling (Camera Following)"},{id:"scrollingmap1.c",name:"Scrolling Tile Map"},{id:"fullscrollgame.c",name:"Full-Scrolling Game"},{id:"test_multiplex.c",name:"Sprite Retriggering"},{id:"test_multispritelib.c",name:"Sprite Multiplexing Library"},{id:"mcbitmap.c",name:"Multicolor Bitmap Mode"},{id:"testlz4.c",name:"LZ4 Bitmap Compression"},{id:"mandel.c",name:"Mandelbrot Fractal"},{id:"musicplayer.c",name:"Music Player"},{id:"siddemo.c",name:"SID Player Demo"},{id:"digisound.c",name:"Digi Sound Player"},{id:"climber.c",name:"Climber Game"},{id:"test_border_sprites.c",name:"Sprites in the Borders"},{id:"sprite_stretch.c",name:"Sprite Stretching"},{id:"linecrunch.c",name:"Linecrunch"},{id:"fld.c",name:"Flexible Line Distance"},{id:"plasma.c",name:"Plasma Demo"},{id:"23matches.c",name:"23 Matches"},{id:"tgidemo.c",name:"TGI Graphics Demo"},{id:"upandaway.c",name:"Up, Up and Away"}],g={main:[{name:"6510 Registers",start:0,size:2,type:"io"},{name:"BIOS Reserved",start:512,size:167},{name:"Default Screen RAM",start:1024,size:1024,type:"ram"},{name:"Cartridge ROM",start:32768,size:8192,type:"rom"},{name:"BASIC ROM",start:40960,size:8192,type:"rom"},{name:"Upper RAM",start:49152,size:4096,type:"ram"},{name:"Character ROM",start:53248,size:4096,type:"rom"},{name:"VIC-II I/O",start:53248,size:1024,type:"io"},{name:"SID",start:54272,size:1024,type:"io"},{name:"Color RAM",start:55296,size:1024,type:"io"},{name:"CIA 1",start:56320,size:256,type:"io"},{name:"CIA 2",start:56576,size:256,type:"io"},{name:"I/O 1",start:56832,size:256,type:"io"},{name:"I/O 2",start:57088,size:256,type:"io"},{name:"KERNAL ROM",start:57344,size:8192,type:"rom"}]},d=class{constructor(e){this.running=!1;this.pauseResumeSupported=!1;this.mainElement=e,this.machine=new c}async start(){console.log("C64ChipsPlatform start() called - EMULATOR DISABLED FOR TESTING"),this.setupIframeMessageListener(),this.pauseResumeSupported=!1,setTimeout(()=>this.updateControlButtons(),100);let e=document.createElement("iframe");e.id="c64-iframe",e.style.width="100%",e.style.height="600px",e.style.border="1px solid #ccc",e.style.backgroundColor="#000",this.mainElement.innerHTML="",this.mainElement.appendChild(e),console.log("C64ChipsPlatform: iframe created, setting up with auto-compilation"),this.setupIframeWithAutoCompilation().catch(o=>{console.error("C64ChipsPlatform: Error in setupIframeWithAutoCompilation:",o)})}nextFrame(){this.running}setupIframeMessageListener(){window.addEventListener("message",e=>{let o=document.getElementById("c64-iframe");!o||e.source!==o.contentWindow||e.data&&e.data.type==="emulator_capabilities"&&(console.log("C64ChipsPlatform: Received emulator capabilities:",e.data.capabilities),e.data.capabilities&&typeof e.data.capabilities.pauseResume=="boolean"&&(this.pauseResumeSupported=e.data.capabilities.pauseResume,console.log("C64ChipsPlatform: Pause/resume supported:",this.pauseResumeSupported),this.updateControlButtons()))})}updateControlButtons(){let e=document.getElementById("dbg_pause"),o=document.getElementById("dbg_go");e?(e.style.display=this.pauseResumeSupported?"inline-block":"none",console.log("C64ChipsPlatform: Pause button visibility:",this.pauseResumeSupported?"visible":"hidden")):console.log("C64ChipsPlatform: Pause button not found"),o?(o.style.display=this.pauseResumeSupported?"inline-block":"none",console.log("C64ChipsPlatform: Resume button visibility:",this.pauseResumeSupported?"visible":"hidden")):console.log("C64ChipsPlatform: Resume button not found")}reset(){let e=document.getElementById("c64-iframe");e&&e.contentWindow&&(e.contentWindow.postMessage({type:"reset"},"*"),console.log("C64ChipsPlatform: Sent reset command to iframe")),this.machine&&this.machine.reset()}isRunning(){return this.running}pause(){if(!this.pauseResumeSupported){console.log("C64ChipsPlatform: Pause not supported by emulator");return}let e=document.getElementById("c64-iframe");e&&e.contentWindow&&(e.contentWindow.postMessage({type:"pause"},"*"),console.log("C64ChipsPlatform: Sent pause command to iframe")),this.machine&&(this.machine.stop(),this.running=!1)}resume(){if(!this.pauseResumeSupported){console.log("C64ChipsPlatform: Resume not supported by emulator");return}let e=document.getElementById("c64-iframe");e&&e.contentWindow&&(e.contentWindow.postMessage({type:"resume"},"*"),console.log("C64ChipsPlatform: Sent resume command to iframe")),this.machine&&(this.machine.run(),this.running=!0)}loadROM(e,o){console.log("C64ChipsPlatform loadROM called with title:",e,"and",o.length,"bytes");var n=document.getElementById("c64-iframe");if(n&&n.contentWindow)if(o.length>1e3){console.log("C64ChipsPlatform: Large program detected, using postMessage instead of URL");let t="c64-iframe.html?t="+Date.now();n.src=t;let a=()=>{console.log("C64ChipsPlatform: iframe loaded, sending program via postMessage"),n.contentWindow.postMessage({type:"compiled_program",program:o,autoLoad:!0},"*"),n.removeEventListener("load",a)};n.addEventListener("load",a)}else{let t=window.c64_debug;t&&t.openIframeWithCurrentProgram?t.generateIframeURL(o).then(a=>{if(console.log("C64ChipsPlatform: Generated iframe URL:",a),a){let i="&t="+Date.now(),r=a+i;console.log("C64ChipsPlatform: Loading fresh URL with cache buster:",r);let l=()=>{console.log("C64ChipsPlatform: iframe loaded, calling checkForProgramInURL"),n.contentWindow.checkForProgramInURL&&n.contentWindow.checkForProgramInURL(),n.removeEventListener("load",l)};n.addEventListener("load",l),n.contentWindow.location=r}else console.error("C64ChipsPlatform: generateIframeURL returned null")}).catch(a=>{console.error("C64ChipsPlatform: Error generating iframe URL:",a)}):console.error("C64ChipsPlatform: c64_debug not available")}else console.error("C64ChipsPlatform: iframe not found or contentWindow not available");this.machine?this.machine.loadProgram(o):console.error("C64ChipsPlatform: machine is null!")}async setupIframeWithAutoCompilation(){var o;console.log("C64ChipsPlatform: Setting up iframe with auto-compilation");let e=(o=window.IDE)==null?void 0:o.getCurrentOutput();if(e&&e instanceof Uint8Array){console.log("C64ChipsPlatform: Found compiled program, loading iframe");let n=window.c64_debug;if(n&&n.generateIframeURL)try{let t=await n.generateIframeURL(e);console.log("C64ChipsPlatform: Generated iframe URL:",t),t?await this.loadIframeWithProgram(t):console.error("C64ChipsPlatform: generateIframeURL returned null")}catch(t){console.error("C64ChipsPlatform: Error generating iframe URL:",t)}else console.error("C64ChipsPlatform: c64_debug not available")}else console.log("C64ChipsPlatform: No compiled program found, triggering compilation"),await this.triggerCompilationAndReload()}async loadIframeWithProgram(e){console.log("C64ChipsPlatform: Loading iframe with program URL:",e);var o=document.getElementById("c64-iframe");if(o&&o.contentWindow){let n="&t="+Date.now(),t=e+n;console.log("C64ChipsPlatform: Loading fresh URL with cache buster:",t);let a=()=>{console.log("C64ChipsPlatform: iframe loaded, calling checkForProgramInURL"),o.contentWindow.checkForProgramInURL&&o.contentWindow.checkForProgramInURL(),o.removeEventListener("load",a)};o.addEventListener("load",a),o.contentWindow.location=t}else console.error("C64ChipsPlatform: iframe not found or contentWindow not available")}async triggerCompilationAndReload(){var o;console.log("C64ChipsPlatform: Triggering compilation and reload"),this.setupCompilationListener();let e=window.worker;if(e&&e.postMessage){console.log("C64ChipsPlatform: Triggering compilation via worker");let n=(o=window.IDE)==null?void 0:o.getCurrentProject(),t=(n==null?void 0:n.getFiles())||{},a=Object.keys(t)[0]||"program.bas",i={updates:Object.entries(t).map(([r,l])=>({path:r,data:typeof l=="string"?l:new TextDecoder().decode(l)})),buildsteps:[{path:a,files:[a],platform:"c64",tool:"c64basic",mainfile:!0}]};e.postMessage(i)}else console.error("C64ChipsPlatform: Worker not available for compilation")}setupCompilationListener(){console.log("C64ChipsPlatform: Setting up compilation listener");let e=window.setCompileOutput;window.setCompileOutput=o=>{e&&e(o),o&&o instanceof Uint8Array&&(console.log("C64ChipsPlatform: Compilation completed, reloading iframe with new program"),setTimeout(async()=>{let n=window.c64_debug;if(n&&n.generateIframeURL)try{let t=await n.generateIframeURL(o);t&&await this.loadIframeWithProgram(t)}catch(t){console.error("C64ChipsPlatform: Error generating iframe URL after compilation:",t)}},1e3))}}getPresets(){return p}getDefaultExtension(){return".c"}getToolForFilename(e){return e.toLowerCase().endsWith(".bas")?"c64basic":e.endsWith(".c")?"cc65":e.endsWith(".dasm")?"dasm":e.endsWith(".acme")?"acme":e.endsWith(".wiz")?"wiz":"cc65"}readAddress(e){return this.machine?this.machine.read(e):0}getMemoryMap(){return g}showHelp(){return"https://8bitworkshop.com/docs/platforms/c64/"}getROMExtension(e){return e&&e[0]==1&&e[1]==8?".prg":".bin"}getCPUState(){return this.machine?this.machine.getCPUState():{PC:0,SP:0}}saveState(){return this.machine?this.machine.saveState():{c:{PC:0,SP:0},b:new Uint8Array(0)}}loadState(e){this.machine&&this.machine.loadState(e)}getPC(){return this.getCPUState().PC}getSP(){return this.getCPUState().SP}isStable(){return!0}getExtraCompileFiles(e){return e==="sidplaysfx.s"?["sidmusic1.bin"]:[]}};u.c64=d;var w=d;export{w as a};
//# sourceMappingURL=chunk-2GJEG4FN.js.map
