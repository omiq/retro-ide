{
  "version": 3,
  "sources": ["../src/platform/msx.ts"],
  "sourcesContent": ["\nimport { MSX1 } from \"../machine/msx\";\nimport { Platform, BaseZ80MachinePlatform } from \"../common/baseplatform\";\nimport { PLATFORMS } from \"../common/emu\";\n\n// https://github.com/Konamiman/MSX2-Technical-Handbook\n// https://www.msx.org/wiki/MSX_Cartridge_slot\n// http://map.grauw.nl/resources/msx_io_ports.php\n// https://openmsx.org/manual/setup.html\n// https://www.msx.org/wiki/Slots\n// https://www.msx.org/wiki/SDCC\n// https://github.com/gseidler/The-MSX-Red-Book/blob/master/the_msx_red_book.md\n\nvar MSX_BIOS_PRESETS = [\n  {id:'helloworld.asm', name:'Hello World (ASM)'},\n  {id:'redbook_kbd.asm', name:'Redbook Keyboard Scanner (ASM)'},\n  {id:'siegegame.c',    name:'Siege Game'},\n  {id:'eliza.c',        name:'Eliza'},\n  {id:'hello.wiz',      name:'Hello (Wiz)'},\n];\n\n// TODO: share with coleco, sms\nvar LIBCV_PRESETS = [\n  { id: 'text.c', name: 'Text Mode' },\n  { id: 'hello.c', name: 'Scrolling Text' },\n  { id: 'text32.c', name: '32-Column Color Text' },\n  { id: 'stars.c', name: 'Scrolling Starfield' },\n  { id: 'cursorsmooth.c', name: 'Moving Cursor' },\n  { id: 'simplemusic.c', name: 'Simple Music' },\n  { id: 'musicplayer.c', name: 'Multivoice Music' },\n  { id: 'mode2bitmap.c', name: 'Mode 2 Bitmap' },\n  { id: 'mode2compressed.c', name: 'Mode 2 Bitmap (LZG)' },\n  { id: 'lines.c', name: 'Mode 2 Lines' },\n  { id: 'multicolor.c', name: 'Multicolor Mode' },\n  { id: 'siegegame.c', name: 'Siege Game' },\n  { id: 'shoot.c', name: 'Solarian Game' },\n  { id: 'climber.c', name: 'Climber Game' },\n];\n\nclass MSXPlatform extends BaseZ80MachinePlatform<MSX1> implements Platform {\n\n  newMachine()          { return new MSX1(); }\n  getPresets()          { return MSX_BIOS_PRESETS; }\n  getDefaultExtension() { return \".c\"; };\n  readAddress(a)        { return this.machine.read(a); }\n  readVRAMAddress(a)    { return this.machine.readVRAMAddress(a); }\n  getMemoryMap = function() { return { main:[\n      {name:'BIOS',start:0x0,size:0x4000,type:'rom'},\n      //{name:'Cartridge',start:0x4000,size:0x4000,type:'rom'},\n      {name:'RAM',start:0xc000,size:0x3200,type:'ram'},\n      {name:'Stack',start:0xf000,size:0x300,type:'ram'},\n      {name:'BIOS Work RAM',start:0xf300,size:0xd00},\n  ] } };\n}\n\nclass MSXLibCVPlatform extends MSXPlatform implements Platform {\n  getPresets() { return LIBCV_PRESETS; }\n}\n\nPLATFORMS['msx'] = MSXPlatform;\nPLATFORMS['msx-libcv'] = MSXLibCVPlatform;\n"],
  "mappings": "gLAaA,GAAI,GAAmB,CACrB,CAAC,GAAG,iBAAkB,KAAK,qBAC3B,CAAC,GAAG,kBAAmB,KAAK,kCAC5B,CAAC,GAAG,cAAkB,KAAK,cAC3B,CAAC,GAAG,UAAkB,KAAK,SAC3B,CAAC,GAAG,YAAkB,KAAK,gBAIzB,EAAgB,CAClB,CAAE,GAAI,SAAU,KAAM,aACtB,CAAE,GAAI,UAAW,KAAM,kBACvB,CAAE,GAAI,WAAY,KAAM,wBACxB,CAAE,GAAI,UAAW,KAAM,uBACvB,CAAE,GAAI,iBAAkB,KAAM,iBAC9B,CAAE,GAAI,gBAAiB,KAAM,gBAC7B,CAAE,GAAI,gBAAiB,KAAM,oBAC7B,CAAE,GAAI,gBAAiB,KAAM,iBAC7B,CAAE,GAAI,oBAAqB,KAAM,uBACjC,CAAE,GAAI,UAAW,KAAM,gBACvB,CAAE,GAAI,eAAgB,KAAM,mBAC5B,CAAE,GAAI,cAAe,KAAM,cAC3B,CAAE,GAAI,UAAW,KAAM,iBACvB,CAAE,GAAI,YAAa,KAAM,iBAG3B,eAA0B,EAAiD,CAA3E,aAvCA,CAuCA,oBAOE,kBAAe,UAAW,CAAE,MAAO,CAAE,KAAK,CACtC,CAAC,KAAK,OAAO,MAAM,EAAI,KAAK,MAAO,KAAK,OAExC,CAAC,KAAK,MAAM,MAAM,MAAO,KAAK,MAAO,KAAK,OAC1C,CAAC,KAAK,QAAQ,MAAM,MAAO,KAAK,IAAM,KAAK,OAC3C,CAAC,KAAK,gBAAgB,MAAM,MAAO,KAAK,SAV5C,YAAsB,CAAE,MAAO,IAAI,GACnC,YAAsB,CAAE,MAAO,GAC/B,qBAAsB,CAAE,MAAO,KAC/B,YAAY,EAAU,CAAE,MAAO,MAAK,QAAQ,KAAK,GACjD,gBAAgB,EAAM,CAAE,MAAO,MAAK,QAAQ,gBAAgB,KAU9D,eAA+B,EAAgC,CAC7D,YAAa,CAAE,MAAO,KAGxB,EAAU,IAAS,EACnB,EAAU,aAAe",
  "names": []
}
