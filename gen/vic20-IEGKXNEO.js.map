{
  "version": 3,
  "sources": ["../src/machine/vic20.ts", "../src/platform/vic20.ts"],
  "sourcesContent": ["// Add global VIC-20 debug functions that are available even when machine isn't initialized\n(function() {\n  // Add global functions for VIC-20 iframe URL generation\n  (window as any).vic20_debug = {\n    // Generate iframe URL with program data\n    generateIframeURL: (programData: Uint8Array, useBase64: boolean = true) => {\n      const baseURL = 'vic20-iframe.html';\n      \n      if (useBase64) {\n        // Convert to base64 for shorter URLs\n        const binaryString = String.fromCharCode.apply(null, Array.from(programData));\n        const base64Data = btoa(binaryString);\n        return `${baseURL}?program=${encodeURIComponent(base64Data)}`;\n      } else {\n        // Convert to hex string\n        const hexString = Array.from(programData).map(b => b.toString(16).padStart(2, '0')).join(' ');\n        return `${baseURL}?hex=${encodeURIComponent(hexString)}`;\n      }\n    },\n    \n    // Open iframe with current compiled program\n    openIframeWithCurrentProgram: () => {\n      const output = (window as any).IDE?.getCurrentOutput();\n      if (output && output instanceof Uint8Array) {\n        const url = (window as any).vic20_debug.generateIframeURL(output);\n        //window.open(url, '_blank');\n        console.log('Opened VIC-20 iframe with current program:', url);\n        return url;\n      } else {\n        console.error('No compiled program available. Compile first.');\n        return null;\n      }\n    },\n    \n    // Get current program as hex string for manual loading\n    getCurrentProgramHex: () => {\n      const output = (window as any).IDE?.getCurrentOutput();\n      if (output && output instanceof Uint8Array) {\n        const hexString = Array.from(output).map(b => b.toString(16).padStart(2, '0')).join(' ');\n        console.log('Current program hex:', hexString);\n        return hexString;\n      } else {\n        console.error('No compiled program available. Compile first.');\n        return null;\n      }\n    },\n    \n    // Get current program info\n    getCurrentProgramInfo: () => {\n      const output = (window as any).IDE?.getCurrentOutput();\n      if (output && output instanceof Uint8Array) {\n        console.log('Current program info:');\n        console.log('  Size:', output.length, 'bytes');\n        console.log('  First 16 bytes:', Array.from(output.slice(0, 16)).map(b => b.toString(16).padStart(2, '0')).join(' '));\n        if (output.length >= 2) {\n          const loadAddress = (output[1] << 8) | output[0];\n          console.log('  Load address: 0x' + loadAddress.toString(16));\n        }\n        return {\n          size: output.length,\n          loadAddress: output.length >= 2 ? (output[1] << 8) | output[0] : null,\n          firstBytes: Array.from(output.slice(0, 16))\n        };\n      } else {\n        console.error('No compiled program available. Compile first.');\n        return null;\n      }\n    }\n  };\n  \n  console.log(\"\u2705 VIC-20 debug functions added to window.vic20_debug\");\n  console.log(\"Available functions:\");\n  console.log(\"  - vic20_debug.generateIframeURL(programData, useBase64)\");\n  console.log(\"  - vic20_debug.openIframeWithCurrentProgram()\");\n  console.log(\"  - vic20_debug.getCurrentProgramHex()\");\n  console.log(\"  - vic20_debug.getCurrentProgramInfo()\");\n})();\n\nimport { Machine, CpuState, EmuState } from '../common/baseplatform';\n\ndeclare global {\n  interface Window {\n    vic20_module?: any;\n    Module?: any;\n    vic20Instance?: VIC20ChipsMachine;\n  }\n}\n\nexport class VIC20ChipsMachine implements Machine {\n  private module: any = null;\n  private canvas: HTMLCanvasElement | null = null;\n  private running = false;\n  private name: string;\n  private description: string;\n  private programLoaded = false; // Track if a program has been loaded\n  private isLoadingProgram = false; // Prevent infinite loops during loading\n\n  private emulatorFocused = false; // Track if emulator is focused\n  \n  // CPU stub for interface compliance\n  cpu = {\n    getPC: () => 0,\n    getSP: () => 0,\n    isStable: () => true,\n    saveState: () => ({ PC: 0, SP: 0 }),\n    loadState: (state: any) => {},\n    reset: () => {},\n    connectMemoryBus: (bus: any) => {}\n  };\n\n  constructor() {\n    this.name = \"VIC-20 (chips-test)\";\n    this.description = \"VIC-20 emulator using chips-test WebAssembly\";\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  getDescription(): string {\n    return this.description;\n  }\n\n  async init(): Promise<void> {\n    try {\n      console.log(\"Initializing chips-test VIC-20 emulator...\");\n\n      // Create canvas for the emulator\n      this.canvas = document.createElement('canvas');\n      this.canvas.id = 'canvas';\n      this.canvas.width = 800;\n      this.canvas.height = 501;\n      this.canvas.style.border = '1px solid #333';\n      this.canvas.style.width = '100%';\n      this.canvas.style.height = 'auto';\n      this.canvas.style.maxWidth = '800px';\n      this.canvas.style.maxHeight = '600px';\n      this.canvas.style.outline = 'none';\n      this.canvas.style.cursor = 'pointer'; // Add pointer cursor to indicate clickable\n      \n      // Add canvas to the pre-existing VIC-20 chips div\n      const vic20Div = document.getElementById('vic20-chips-div');\n      const vic20Screen = document.getElementById('vic20-chips-screen');\n      \n      if (vic20Div && vic20Screen) {\n        vic20Screen.appendChild(this.canvas);\n        console.log(\"\u2705 Added VIC-20 canvas to pre-existing div\");\n      } else {\n        // Fallback: add to document body\n        document.body.appendChild(this.canvas);\n        console.log(\"\u2705 Added VIC-20 canvas to document body\");\n      }\n\n      // Connect the canvas to the emulator immediately\n      this.connectCanvasToEmulator();\n      \n      // Add click-to-focus functionality\n      this.addClickToFocusFunctionality();\n      \n      // Add simple focus prevention without complex tracking\n      this.addSimpleFocusProtection();\n      \n      // Load the VIC-20 script if not already loaded (non-blocking)\n      this.loadVIC20ScriptIfNeeded();\n      \n      // Add drag and drop listeners\n      this.addCanvasDragAndDropListeners();\n      \n      // Try to detect module after a short delay (non-blocking)\n        setTimeout(() => {\n          this.detectModule();\n        this.enableJoystickSupport();\n      }, 1000);\n      \n    } catch (error) {\n      console.error(\"Error initializing VIC-20 chips emulator:\", error);\n    }\n  }\n\n\n\n  private loadVIC20ScriptIfNeeded(): void {\n    // Check if VIC-20 script is already loaded\n    if (typeof (window as any).h !== 'undefined') {\n      console.log(\"\u2705 VIC-20 script already loaded\");\n      return;\n    }\n    \n    // Check if script tag already exists\n    const existingScript = document.querySelector('script[src*=\"vic20.js\"]');\n    if (existingScript) {\n      console.log(\"\u2705 VIC-20 script tag already exists, waiting for it to load\");\n      return;\n    }\n    \n    console.log(\"\uD83D\uDD27 Loading VIC-20 script...\");\n    \n    // Load the VIC-20 script with timestamp to prevent caching\n    const script = document.createElement('script');\n    script.src = `res/vic20.js?t=${Date.now()}`;\n    script.async = true;\n    \n    script.onload = () => {\n      console.log(\"\u2705 VIC-20 script loaded successfully\");\n      \n      // Check if the VIC-20 script set up any global keyboard listeners\n      setTimeout(() => {\n        console.log(\"\uD83D\uDD0D Checking for global keyboard event listeners...\");\n            const h = (window as any).h;\n        if (h) {\n          console.log(\"\uD83D\uDD0D VIC-20 'h' object functions:\", Object.keys(h).filter(k => typeof h[k] === 'function'));\n          \n          // Check if canvas has any event listeners\n          if (h.canvas) {\n            console.log(\"\uD83D\uDD0D VIC-20 canvas found:\", h.canvas);\n            console.log(\"\uD83D\uDD0D Canvas tabIndex:\", h.canvas.tabIndex);\n            console.log(\"\uD83D\uDD0D Canvas focusable:\", h.canvas.tabIndex >= 0);\n          }\n        }\n      }, 1000);\n    };\n    \n    script.onerror = (error) => {\n      console.error(\"\u274C Failed to load VIC-20 script:\", error);\n    };\n    \n    document.head.appendChild(script);\n  }\n\n  private detectModule(): void {\n    // Try to detect the module\n    if (typeof (window as any).Module !== 'undefined' && (window as any).Module) {\n      console.log(\"Found Module object, setting module reference\");\n      this.module = (window as any).Module;\n    } else if ((window as any).h) {\n      console.log(\"Found 'h' object, using as module\");\n      this.module = (window as any).h;\n    } else {\n      console.log(\"VIC-20 module not detected yet, will retry later\");\n      return;\n    }\n    \n    console.log(\"VIC-20 chips-test emulator module detected\");\n  }\n  \n  private enableJoystickSupport(): void {\n    console.log(\"\uD83D\uDD27 Enabling joystick support...\");\n    \n    if ((window as any).h && typeof (window as any).h.__sargs_add_kvp === 'function') {\n      try {\n        (window as any).h.__sargs_add_kvp('joystick', 'true');\n        console.log(\"\u2705 Joystick support enabled via URL parameters\");\n      } catch (e) {\n        console.log(\"\u274C Error enabling joystick support:\", e);\n      }\n    }\n    \n    // Also try to enable joystick support in the module\n    if (this.module && typeof this.module.vic20_enable_joystick === 'function') {\n      try {\n        this.module.vic20_enable_joystick(true);\n        console.log(\"\u2705 Joystick support enabled via module function\");\n      } catch (e) {\n        console.log(\"\u274C Error enabling joystick support in module:\", e);\n      }\n    }\n  }\n  \n  private connectCanvasToEmulator(): void {\n    if (!this.canvas) {\n      console.log(\"\u274C No canvas available for emulator connection\");\n      return;\n    }\n    \n    console.log(\"\uD83D\uDD17 Connecting canvas to VIC-20 emulator for display output...\");\n    \n    // Try to connect the canvas to the emulator module\n    if (this.module) {\n      // Set the canvas on the module if it has a canvas property\n      if (typeof this.module.canvas === 'undefined') {\n        this.module.canvas = this.canvas;\n        console.log(\"\u2705 Connected canvas to module.canvas\");\n      }\n      \n      // Try to set the canvas on the global scope for the WASM module\n      if (typeof (window as any).canvas === 'undefined') {\n        (window as any).canvas = this.canvas;\n        console.log(\"\u2705 Connected canvas to window.canvas\");\n      }\n      \n      // Try to trigger a display refresh\n      if (typeof this.module.requestAnimationFrame === 'function') {\n        console.log(\"\u2705 Module has requestAnimationFrame - display should work\");\n      }\n    }\n    \n    // Add drag-and-drop event listeners to the canvas for manual file loading\n    this.addCanvasDragAndDropListeners();\n    \n    // Check if the canvas is being used by the emulator\n    setTimeout(() => {\n      if (this.canvas) {\n        const ctx = this.canvas.getContext('2d');\n        if (ctx) {\n          // Try to draw a test pattern to verify the canvas is working\n          ctx.fillStyle = 'black';\n          ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n          ctx.fillStyle = 'white';\n          ctx.font = '16px monospace';\n          ctx.fillText('VIC-20 Emulator Ready', 10, 30);\n          console.log(\"\u2705 Canvas is working - test pattern drawn\");\n        }\n      }\n    }, 1000);\n  }\n\n  private async waitForModuleDetection(): Promise<void> {\n    // Wait for module to be detected\n    let attempts = 0;\n    const maxAttempts = 20; // 2 seconds\n    \n    while (attempts < maxAttempts) {\n      if (this.module || (window as any).Module || (window as any).h) {\n        this.detectModule();\n        break;\n      }\n      \n      await new Promise(resolve => setTimeout(resolve, 100));\n      attempts++;\n    }\n    \n    if (attempts >= maxAttempts) {\n      console.log(\"VIC-20 module detection timed out, but emulator should still work\");\n      this.detectModule();\n    }\n  }\n\n  run(): void {\n    if (this.module && this.running) return;\n    this.running = true;\n    \n    // The chips-test emulator runs automatically, we just need to ensure it's started\n    if (this.module && typeof (this.module as any).vic20_run === 'function') {\n      (this.module as any).vic20_run();\n    } else if (typeof (window as any).vic20_run === 'function') {\n      (window as any).vic20_run();\n    }\n  }\n\n  stop(): void {\n    this.running = false;\n    // The chips-test emulator doesn't have a stop function, it runs continuously\n    // We just mark it as not running\n  }\n\n  reset(): void {\n    if (this.module && typeof (this.module as any).vic20_reset === 'function') {\n      (this.module as any).vic20_reset();\n    } else if (typeof (window as any).vic20_reset === 'function') {\n      (window as any).vic20_reset();\n    }\n  }\n\n  advanceFrame(trap: () => boolean): number {\n    // The chips-test emulator runs automatically\n    return 0;\n  }\n\n  loadROM(data: Uint8Array, title?: string): void {\n    console.log(`VIC20ChipsPlatform loadROM called with title: ${title} and ${data.length} bytes`);\n    \n    // Store the program data for later use\n    const prgData = data;\n    \n    // Debug compilation output\n    this.debugCompilationOutput();\n    \n    // Use the simplified approach: direct drop event\n    this.loadProgram(prgData);\n    \n    // Add global debug functions\n    this.addGlobalDebugFunctions();\n  }\n\n  loadControlsState(state: any): void {\n    // No controls state for VIC-20 chips\n  }\n\n  saveControlsState(): any {\n    return {};\n  }\n\n  loadProgram(program: Uint8Array): void {\n    console.log(\"VIC20ChipsPlatform loadROM called with title: hello.c and\", program.length, \"bytes\");\n    \n    if (this.isLoadingProgram) {\n      console.log(\"\u26A0\uFE0F Program already loading, ignoring to prevent infinite loop\");\n      return;\n    }\n    \n    this.isLoadingProgram = true;\n    \n    try {\n      // Get the VIC-20 module\n    const h = (window as any).h;\n      if (!h) {\n        console.log(\"\u274C No 'h' object available for loading program\");\n        return;\n      }\n      \n      console.log(\"\u2705 Found 'h' object, using as module\");\n      \n      // Try to load the program using the drop function\n      if (typeof h.__sapp_emsc_begin_drop === 'function') {\n        console.log(\"\uD83C\uDFAF Loading program via drop function...\");\n        \n        // Create a File object\n        const file = new File([program], \"main.prg\", { type: \"application/octet-stream\" });\n          \n          // Create a DataTransfer and add the File\n        const dt = new DataTransfer();\n        dt.items.add(file);\n          \n          // Create a synthetic drop event\n        const dropEvent = new DragEvent(\"drop\", {\n            dataTransfer: dt,\n            bubbles: true,\n            cancelable: true\n          });\n          \n          // Find the canvas and dispatch the event\n        const canvas = document.getElementById(\"canvas\");\n          if (canvas) {\n            canvas.dispatchEvent(dropEvent);\n            console.log(\"\u2705 Drop event dispatched to canvas\");\n            \n          // Wait for program to load, then execute\n            setTimeout(() => {\n            console.log(\"\uD83C\uDFAF Executing loaded program...\");\n              this.executeLoadedProgram();\n          }, 1000);\n          } else {\n            console.log(\"\u274C Canvas not found\");\n          }\n        } else {\n        console.log(\"\u274C No drop function available\");\n      }\n    } catch (error) {\n      console.error(\"Error loading program:\", error);\n    } finally {\n      // Reset the flag after a delay\n            setTimeout(() => {\n        this.isLoadingProgram = false;\n      }, 2000);\n    }\n  }\n  \n\n  \n\n  \n  private executeLoadedProgram(): void {\n    console.log(\"\uD83C\uDFAF Executing loaded program...\");\n    \n    const h = (window as any).h;\n    if (!h) {\n      console.log(\"\u274C No 'h' object available for execution\");\n      return;\n    }\n    \n    // Try to find and call an execution function\n    const executionFunctions = Object.keys(h).filter(fn => \n      fn.toLowerCase().includes('run') || \n      fn.toLowerCase().includes('execute') ||\n      fn.toLowerCase().includes('start') ||\n      fn.toLowerCase().includes('main')\n    );\n    \n    console.log(\"\uD83C\uDFAF Found potential execution functions:\", executionFunctions);\n    \n    // Try the most likely execution function\n    if (typeof h.__sapp_emsc_begin_drop === 'function') {\n      console.log(\"\uD83C\uDFAF Trying __sapp_emsc_begin_drop...\");\n      try {\n        h.__sapp_emsc_begin_drop();\n        console.log(\"\u2705 Successfully called __sapp_emsc_begin_drop\");\n      } catch (error) {\n        console.log(\"\u274C Error calling __sapp_emsc_begin_drop:\", error);\n      }\n    }\n    \n    // Try other common execution functions\n    for (const funcName of executionFunctions) {\n      if (typeof h[funcName] === 'function') {\n        console.log(`\uD83C\uDFAF Trying ${funcName}...`);\n        try {\n          h[funcName]();\n          console.log(`\u2705 Successfully called ${funcName}`);\n          break;\n        } catch (error) {\n          console.log(`\u274C Error calling ${funcName}:`, error);\n        }\n      }\n    }\n  }\n  \n  private loadProgramViaURL(program: Uint8Array): void {\n    console.log(\"=== ATTEMPTING URL PARAMETER LOAD ===\");\n    \n    let prgData: Uint8Array;\n    \n    // Check if program already has PRG header\n    if (program.length >= 2 && program[0] === 0x18 && program[1] === 0x10) {\n      console.log(\"Program already has PRG header, using as-is\");\n      prgData = program;\n    } else {\n      console.log(\"Adding PRG header to program\");\n      // VIC-20 PRG header: 0x18, 0x10 (load address 0x1000)\n      prgData = new Uint8Array(program.length + 2);\n      prgData[0] = 0x18; // Low byte of load address (0x10)\n      prgData[1] = 0x10; // High byte of load address (0x10)\n      prgData.set(program, 2);\n    }\n    \n    // Create a blob URL for the program\n    const blob = new Blob([prgData], { type: 'application/octet-stream' });\n    const fileUrl = URL.createObjectURL(blob);\n    console.log(\"Created temporary file URL:\", fileUrl);\n    \n    // Create new URL with file parameter\n    const newUrl = new URL(window.location.href);\n    newUrl.searchParams.set('file', fileUrl);\n    newUrl.searchParams.set('autorun', '1');\n    newUrl.searchParams.set('joystick', 'true'); // Enable joystick support\n    console.log(\"New URL with file parameter and joystick:\", newUrl.toString());\n    \n    // Try to add the file parameter to the emulator via the 'h' object\n    if ((window as any).h) {\n      const h = (window as any).h;\n      \n      // Look for URL-related functions\n      const urlFunctions = Object.keys(h).filter(fn => \n        fn.toLowerCase().includes('url') || \n        fn.toLowerCase().includes('param') || \n        fn.toLowerCase().includes('args') || \n        fn.toLowerCase().includes('parse')\n      );\n      console.log(\"URL-related functions found:\", urlFunctions);\n      \n      // Try calling any URL-related functions\n      for (const fn of urlFunctions) {\n        if (typeof h[fn] === 'function') {\n          console.log(`Trying to call ${fn}...`);\n          try {\n            h[fn]();\n            console.log(`\u2705 Successfully called ${fn}`);\n          } catch (e) {\n            console.log(`\u274C Error calling ${fn}:`, e);\n          }\n        }\n      }\n      \n      // Try to add file parameter via __sargs_add_kvp if available\n      if (typeof h.__sargs_add_kvp === 'function') {\n        console.log(\"Trying to add file parameter via __sargs_add_kvp...\");\n        try {\n          h.__sargs_add_kvp('file', fileUrl);\n          h.__sargs_add_kvp('autorun', '1');\n          h.__sargs_add_kvp('joystick', 'true'); // Enable joystick support\n          \n          // Add input parameter if present in URL\n          const urlParams = new URLSearchParams(window.location.search);\n          const inputParam = urlParams.get('input');\n          if (inputParam) {\n            console.log(\"Found input parameter:\", inputParam);\n            h.__sargs_add_kvp('input', inputParam);\n          }\n          \n          console.log(\"\u2705 Successfully added file parameters including joystick support\");\n        } catch (e) {\n          console.log(\"\u274C Error adding file parameters:\", e);\n        }\n      }\n    }\n    \n    // Fallback to drop method after a short delay\n    setTimeout(() => {\n      console.log(\"Falling back to drop method...\");\n      this.loadProgramViaDrop(prgData);\n    }, 1000);\n  }\n  \n  private loadProgramViaDrop(prgData: Uint8Array): void {\n    console.log(\"=== ATTEMPTING DROP METHOD LOAD ===\");\n    \n    // Parse PRG header\n    const loadAddress = (prgData[1] << 8) | prgData[0];\n    console.log(\"Detected load address: 0x\" + loadAddress.toString(16).toUpperCase() + \" (\" + loadAddress + \")\");\n    console.log(\"PRG header bytes: 0x\" + prgData[0].toString(16).toUpperCase() + \" 0x\" + prgData[1].toString(16).toUpperCase());\n    \n    // Validate load address\n    if (loadAddress === 0x1001 || loadAddress === 0x1200 || loadAddress === 0x1018) {\n      if (loadAddress === 0x1018) {\n        console.log(\"\u2705 Valid VIC-20 BASIC program detected (0x1018) - alternative load address\");\n      } else {\n        console.log(\"\u2705 Valid VIC-20 program detected\");\n      }\n    } else {\n      console.log(\"\u26A0\uFE0F Unexpected load address - may not be a valid VIC-20 program\");\n    }\n    \n    // Check for available functions\n    const h = (window as any).h;\n    const availableWindowFunctions = Object.keys(window).filter(key => \n      typeof (window as any)[key] === 'function' && \n      (key.toLowerCase().includes('drop') || key.toLowerCase().includes('load') || key.toLowerCase().includes('run'))\n    );\n    const availableModuleFunctions = this.module ? Object.keys(this.module).filter(key => \n      typeof this.module![key] === 'function' && \n      (key.toLowerCase().includes('drop') || key.toLowerCase().includes('load') || key.toLowerCase().includes('run'))\n    ) : [];\n    \n    console.log(\"Available window functions:\", availableWindowFunctions);\n    console.log(\"Available module functions:\", availableModuleFunctions);\n    \n    console.log(\"PRG data length:\", prgData.length);\n    console.log(\"PRG header:\", prgData[0], prgData[1]);\n    console.log(\"First few bytes of program:\", prgData.slice(0, 10));\n    \n    // Allocate memory in WASM heap\n    let ptr: number;\n    try {\n      if (typeof this.module!._malloc === 'function') {\n        ptr = this.module!._malloc(prgData.length);\n        console.log(\"\u2705 Allocated memory at address:\", ptr);\n      } else if (typeof this.module!._fs_emsc_alloc === 'function') {\n        ptr = this.module!._fs_emsc_alloc(prgData.length);\n        console.log(\"\u2705 Allocated memory using _fs_emsc_alloc at address:\", ptr);\n      } else {\n        console.log(\"\u274C No memory allocation function available\");\n        return;\n      }\n    } catch (error) {\n      console.log(\"\u274C Error allocating memory:\", error);\n      return;\n    }\n    \n    // Copy data to WASM heap\n    try {\n      if (this.module!.HEAPU8) {\n        this.module!.HEAPU8.set(prgData, ptr);\n        console.log(\"\u2705 Copied PRG data to WASM heap\");\n      } else if (this.module!.HEAP8) {\n        this.module!.HEAP8.set(prgData, ptr);\n        console.log(\"\u2705 Copied PRG data to WASM heap using HEAP8\");\n      } else if (this.module!.HEAP) {\n        // Try to copy using the generic HEAP\n        for (let i = 0; i < prgData.length; i++) {\n          this.module!.HEAP[ptr + i] = prgData[i];\n        }\n        console.log(\"\u2705 Copied PRG data to WASM heap using generic HEAP\");\n      } else {\n        console.log(\"\u274C No WASM heap available - trying alternative approach\");\n        // Try calling drop functions without memory allocation\n        this.callDropFunctionsWithoutMemory(prgData);\n        return;\n      }\n    } catch (error) {\n      console.log(\"\u274C Error copying data to WASM heap:\", error);\n      console.log(\"Trying alternative approach without memory allocation...\");\n      this.callDropFunctionsWithoutMemory(prgData);\n      return;\n    }\n    \n    console.log(\"PRG header:\", prgData[0], prgData[1]);\n    console.log(\"First few bytes of program:\", prgData.slice(0, 10));\n    \n    // Attempt to trigger drag-and-drop functionality using 'h' object\n    console.log(\"Attempting to trigger drag-and-drop functionality using 'h' object\");\n    console.log(\"PRG data to load:\", prgData);\n    console.log(\"PRG data length:\", prgData.length);\n    console.log(\"First 10 bytes:\", prgData.slice(0, 10));\n    \n    // Check if we have the complete drop sequence\n    const dropFunctions = ['__sapp_emsc_begin_drop', '__sapp_emsc_drop', '__sapp_emsc_end_drop'];\n    const hasAllDropFunctions = dropFunctions.every(fn => typeof h[fn] === 'function');\n    \n    if (hasAllDropFunctions) {\n      console.log(\"Found complete drop sequence, calling all three functions...\");\n      \n      try {\n        h.__sapp_emsc_begin_drop();\n        console.log(\"Called __sapp_emsc_begin_drop successfully\");\n      } catch (error) {\n        console.log(\"\u274C Error calling __sapp_emsc_begin_drop:\", error);\n      }\n      \n      try {\n        h.__sapp_emsc_drop(ptr, prgData.length);\n        console.log(\"Called __sapp_emsc_drop successfully\");\n      } catch (error) {\n        console.log(\"\u274C Error calling __sapp_emsc_drop:\", error);\n      }\n      \n      try {\n        h.__sapp_emsc_end_drop();\n        console.log(\"Called __sapp_emsc_end_drop successfully\");\n      } catch (error) {\n        console.log(\"\u274C Error calling __sapp_emsc_end_drop:\", error);\n      }\n    } else {\n      console.log(\"\u274C Missing drop functions:\", dropFunctions.filter(fn => typeof h[fn] !== 'function'));\n    }\n    \n    console.log(\"=== SIMPLIFIED EXECUTION APPROACH ===\");\n    \n    // Call _main to ensure emulator is running\n    if (typeof this.module!._main === 'function') {\n      try {\n        this.module!._main();\n        console.log(\"\u2705 Calling _main to ensure emulator is running...\");\n      } catch (error) {\n        console.log(\"\u274C Error calling _main:\", error);\n      }\n    }\n    \n    console.log(\"\u2705 Program loaded and emulator should be running\");\n    console.log(\"\u2705 Check the VIC-20 screen for output\");\n    console.log(\"\u2705 Try clicking on the canvas to interact with the emulator\");\n    \n    // Force display refresh\n    this.forceDisplayRefresh();\n    \n    // Verify and execute the loaded ROM\n    console.log(\"\uD83D\uDD04 About to call verifyAndExecuteLoadedROM...\");\n    this.verifyAndExecuteLoadedROM(prgData);\n    \n    console.log(\"\u2705 VIC-20 program loading complete!\");\n    console.log(\"\u2705 The emulator should now be running with your program\");\n    console.log(\"\u2705 Check the VIC-20 screen for any output\");\n    console.log(\"\u2705 You can interact with the emulator by clicking on the canvas\");\n    \n    // Try direct memory loading as a fallback\n    this.tryDirectMemoryLoading(prgData);\n    \n    // Debug: Log compilation output\n    this.debugCompilationOutput();\n    \n    // Also try to trigger execution manually\n    this.tryManualExecution(prgData);\n    \n    // Try the drop approach as well\n    this.tryDropApproach(prgData);\n  }\n  \n  private debugCompilationOutput(): void {\n    console.log(\"=== DEBUGGING COMPILATION OUTPUT ===\");\n    \n    // Try to access the worker's virtual file system\n    if (typeof (window as any).worker !== 'undefined') {\n      console.log(\"\u2705 Worker found, checking virtual file system...\");\n      \n      // Check if we can access the store\n      if ((window as any).worker.store) {\n        console.log(\"\u2705 Store found, checking files...\");\n        const files = Object.keys((window as any).worker.store.workfs || {});\n        console.log(\"Files in virtual file system:\", files);\n        \n        // Check for main output file\n        if ((window as any).worker.store.workfs['main']) {\n          const mainFile = (window as any).worker.store.workfs['main'];\n          console.log(\"Main file found:\", mainFile);\n          console.log(\"Main file size:\", mainFile.data.length);\n          console.log(\"Main file first 32 bytes:\", Array.from(mainFile.data.slice(0, 32)).map((b: number) => b.toString(16).padStart(2, '0')).join(' '));\n        }\n        \n        // Check for map file\n        if ((window as any).worker.store.workfs['main.map']) {\n          const mapFile = (window as any).worker.store.workfs['main.map'];\n          console.log(\"Map file found:\", mapFile);\n          console.log(\"Map file content:\", mapFile.data);\n        }\n      }\n    }\n    \n    // Also check if we can access the builder\n    if (typeof (window as any).builder !== 'undefined') {\n      console.log(\"\u2705 Builder found\");\n      console.log(\"Builder steps:\", (window as any).builder.steps);\n    }\n    \n    // Check for any global compilation state\n    if (typeof (window as any).current_output !== 'undefined') {\n      console.log(\"\u2705 Current output found:\", (window as any).current_output);\n      console.log(\"Current output length:\", (window as any).current_output?.length);\n      \n      // Log the first 32 bytes of the current output\n      if ((window as any).current_output && (window as any).current_output.length > 0) {\n        console.log(\"Current output first 32 bytes (hex):\", Array.from((window as any).current_output.slice(0, 32)).map((b: number) => b.toString(16).padStart(2, '0')).join(' '));\n        console.log(\"Current output first 32 bytes (decimal):\", Array.from((window as any).current_output.slice(0, 32)).join(' '));\n      }\n    }\n    \n    // Check for compilation parameters\n    if (typeof (window as any).compparams !== 'undefined') {\n      console.log(\"\u2705 Compilation parameters found:\", (window as any).compparams);\n    }\n    \n    // Check for debug symbols\n    if (typeof (window as any).platform !== 'undefined' && (window as any).platform.debugSymbols) {\n      console.log(\"\u2705 Debug symbols found:\", (window as any).platform.debugSymbols);\n    }\n  }\n  \n  private addGlobalDebugFunctions(): void {\n    // Add global functions for debugging and testing\n    (window as any).vic20_debug = {\n      loadProgram: (data: Uint8Array) => this.loadProgram(data),\n      getCanvas: () => this.getCanvas(),\n      getModule: () => this.module,\n      getCPUState: () => this.getCPUState(),\n      readMemory: (address: number) => this.read(address),\n      writeMemory: (address: number, value: number) => this.write(address, value),\n      reset: () => this.reset(),\n      run: () => this.run(),\n      stop: () => this.stop(),\n      // Add function to generate iframe URL with program data\n      generateIframeURL: (programData: Uint8Array, useBase64: boolean = true) => {\n        const baseURL = 'vic20-iframe.html';\n        \n        if (useBase64) {\n          // Convert to base64 for shorter URLs\n          const binaryString = String.fromCharCode.apply(null, Array.from(programData));\n          const base64Data = btoa(binaryString);\n          return `${baseURL}?program=${encodeURIComponent(base64Data)}`;\n        } else {\n          // Convert to hex string\n          const hexString = Array.from(programData).map(b => b.toString(16).padStart(2, '0')).join(' ');\n          return `${baseURL}?hex=${encodeURIComponent(hexString)}`;\n        }\n      },\n      // Add function to open iframe with current compiled program\n      openIframeWithCurrentProgram: () => {\n        const output = (window as any).IDE?.getCurrentOutput();\n        if (output && output instanceof Uint8Array) {\n          const url = (window as any).vic20_debug.generateIframeURL(output);\n          window.open(url, '_blank');\n          console.log('Opened VIC-20 iframe with current program:', url);\n        } else {\n          console.error('No compiled program available. Compile first.');\n        }\n      }\n    };\n    \n    console.log(\"\u2705 VIC-20 debug functions added to window.vic20_debug\");\n    console.log(\"Available functions:\");\n    console.log(\"  - vic20_debug.loadProgram(data)\");\n    console.log(\"  - vic20_debug.getCanvas()\");\n    console.log(\"  - vic20_debug.getModule()\");\n    console.log(\"  - vic20_debug.getCPUState()\");\n    console.log(\"  - vic20_debug.readMemory(address)\");\n    console.log(\"  - vic20_debug.writeMemory(address, value)\");\n    console.log(\"  - vic20_debug.reset()\");\n    console.log(\"  - vic20_debug.run()\");\n    console.log(\"  - vic20_debug.stop()\");\n    console.log(\"  - vic20_debug.generateIframeURL(programData, useBase64)\");\n    console.log(\"  - vic20_debug.openIframeWithCurrentProgram()\");\n  }\n  \n  private loadProgramDirectly(data: Uint8Array): void {\n    console.log(\"=== LOADING PROGRAM DIRECTLY ===\");\n    \n    if (!this.module) {\n      console.log(\"\u274C No module available\");\n      return;\n    }\n    \n    try {\n      // Parse PRG header\n      const loadAddress = (data[1] << 8) | data[0];\n      const programData = data.slice(2); // Skip PRG header\n      \n      console.log(\"Load address:\", loadAddress.toString(16));\n      console.log(\"Program data length:\", programData.length);\n      \n      // Load program directly into VIC-20 memory\n      for (let i = 0; i < programData.length; i++) {\n        const address = loadAddress + i;\n        this.write(address, programData[i]);\n      }\n      \n      console.log(\"\u2705 Program loaded directly into VIC-20 memory\");\n      \n      // For BASIC programs, set the BASIC start pointer\n      if (loadAddress === 0x1001) {\n        this.write(0x2B, loadAddress & 0xFF); // BASIC start low\n        this.write(0x2C, (loadAddress >> 8) & 0xFF); // BASIC start high\n        this.write(0x2D, (loadAddress + programData.length) & 0xFF); // BASIC end low\n        this.write(0x2E, ((loadAddress + programData.length) >> 8) & 0xFF); // BASIC end high\n        \n        console.log(\"\u2705 BASIC pointers set\");\n      }\n      \n      // Try to trigger program execution\n      const h = (window as any).h;\n      if (h) {\n        console.log(\"\uD83D\uDD0D Checking for vic20_reset function...\");\n        if (typeof h.vic20_reset === 'function') {\n          h.vic20_reset();\n          console.log(\"\u2705 VIC-20 reset called\");\n        } else {\n          console.log(\"\u274C vic20_reset function not found\");\n        }\n        \n        // Also try to set PC to load address\n        console.log(\"\uD83D\uDD0D Checking for vic20_set_pc function...\");\n        if (typeof h.vic20_set_pc === 'function') {\n          h.vic20_set_pc(loadAddress);\n          console.log(\"\u2705 PC set to load address\");\n        } else {\n          console.log(\"\u274C vic20_set_pc function not found\");\n        }\n        \n        // Try alternative reset methods\n        console.log(\"\uD83D\uDD0D Trying alternative reset methods...\");\n        if (typeof h.reset === 'function') {\n          h.reset();\n          console.log(\"\u2705 h.reset() called\");\n        }\n        if (typeof h.vic20_reset_cpu === 'function') {\n          h.vic20_reset_cpu();\n          console.log(\"\u2705 h.vic20_reset_cpu() called\");\n        }\n        if (typeof h.vic20_run === 'function') {\n          h.vic20_run();\n          console.log(\"\u2705 h.vic20_run() called\");\n        }\n        \n        // Try to trigger execution by calling _main\n        console.log(\"\uD83D\uDD0D Trying to trigger execution via _main...\");\n        if (typeof h._main === 'function') {\n          h._main();\n          console.log(\"\u2705 h._main() called to trigger execution\");\n        }\n      } else {\n        console.log(\"\u274C No 'h' object available for execution\");\n      }\n      \n      // Force display refresh\n      this.forceDisplayRefresh();\n      \n    } catch (error) {\n      console.log(\"\u274C Error in direct loading:\", error);\n    }\n  }\n  \n  private tryManualExecution(prgData: Uint8Array): void {\n    console.log(\"=== TRYING MANUAL EXECUTION ===\");\n    \n    if (!this.module) {\n      console.log(\"\u274C No module available for manual execution\");\n      return;\n    }\n    \n    try {\n      // Parse PRG header\n      const loadAddress = (prgData[1] << 8) | prgData[0];\n      const programData = prgData.slice(2); // Skip PRG header\n      \n      console.log(\"Manual execution - Load address:\", loadAddress.toString(16));\n      console.log(\"Manual execution - Program data length:\", programData.length);\n      \n      // Try to load program directly into VIC-20 memory\n      for (let i = 0; i < programData.length; i++) {\n        const address = loadAddress + i;\n        this.write(address, programData[i]);\n      }\n      \n      console.log(\"\u2705 Program loaded directly into VIC-20 memory for manual execution\");\n      \n      // For BASIC programs, set the BASIC start pointer\n      if (loadAddress === 0x1001) {\n        this.write(0x2B, loadAddress & 0xFF); // BASIC start low\n        this.write(0x2C, (loadAddress >> 8) & 0xFF); // BASIC start high\n        this.write(0x2D, (loadAddress + programData.length) & 0xFF); // BASIC end low\n        this.write(0x2E, ((loadAddress + programData.length) >> 8) & 0xFF); // BASIC end high\n        \n        console.log(\"\u2705 BASIC pointers set for manual execution\");\n      }\n      \n      // Try to trigger program execution\n      if (typeof this.module.vic20_reset === 'function') {\n        this.module.vic20_reset();\n        console.log(\"\u2705 VIC-20 reset called for manual execution\");\n      }\n      \n      // Also try to set PC to load address\n      if (typeof this.module.vic20_set_pc === 'function') {\n        this.module.vic20_set_pc(loadAddress);\n        console.log(\"\u2705 PC set to load address for manual execution\");\n      }\n      \n    } catch (error) {\n      console.log(\"\u274C Error in manual execution:\", error);\n    }\n  }\n  \n  private tryDirectMemoryLoading(prgData: Uint8Array): void {\n    console.log(\"=== TRYING DIRECT MEMORY LOADING ===\");\n    \n    if (!this.module) {\n      console.log(\"\u274C No module available for direct memory loading\");\n      return;\n    }\n    \n    // Parse PRG header\n    const loadAddress = (prgData[1] << 8) | prgData[0];\n    const programData = prgData.slice(2); // Skip PRG header\n    \n    console.log(\"Load address:\", loadAddress.toString(16));\n    console.log(\"Program data length:\", programData.length);\n    \n    // Try to load program directly into VIC-20 memory\n    try {\n      // Load program data into memory starting at load address\n      for (let i = 0; i < programData.length; i++) {\n        const address = loadAddress + i;\n        this.write(address, programData[i]);\n      }\n      \n      console.log(\"\u2705 Program loaded directly into VIC-20 memory\");\n      \n      // Try to set PC to load address for BASIC programs\n      if (loadAddress === 0x1001) {\n        // For BASIC programs, we need to set the BASIC start pointer\n        this.write(0x2B, loadAddress & 0xFF); // BASIC start low\n        this.write(0x2C, (loadAddress >> 8) & 0xFF); // BASIC start high\n        this.write(0x2D, (loadAddress + programData.length) & 0xFF); // BASIC end low\n        this.write(0x2E, ((loadAddress + programData.length) >> 8) & 0xFF); // BASIC end high\n        \n        console.log(\"\u2705 BASIC pointers set for program execution\");\n      }\n      \n      // Try to trigger program execution\n      if (typeof this.module.vic20_reset === 'function') {\n        this.module.vic20_reset();\n        console.log(\"\u2705 VIC-20 reset called to start program execution\");\n      }\n      \n    } catch (error) {\n      console.log(\"\u274C Error in direct memory loading:\", error);\n    }\n  }\n\n  getCanvas(): HTMLCanvasElement | null {\n    return this.canvas;\n  }\n\n  getFPS(): number {\n    return 60; // VIC-20 runs at 60 FPS\n  }\n\n  read(address: number): number {\n    if (this.module && this.module.vic20_read_memory) {\n      return this.module.vic20_read_memory(address);\n    }\n    return 0;\n  }\n\n  write(address: number, value: number): void {\n    if (this.module && this.module.vic20_write_memory) {\n      this.module.vic20_write_memory(address, value);\n    }\n  }\n\n  getCPUState(): CpuState {\n    return {\n      PC: 0,\n      SP: 0\n    };\n  }\n\n  saveState(): EmuState {\n    if (this.module && this.module.vic20_save_state) {\n      const state = this.module.vic20_save_state();\n      return { c: { PC: 0, SP: 0 }, b: state };\n    }\n    return { c: { PC: 0, SP: 0 }, b: null };\n  }\n\n  loadState(state: EmuState): void {\n    if (this.module && this.module.vic20_load_state && state.b) {\n      this.module.vic20_load_state(state.b);\n    }\n  }\n\n  destroy(): void {\n    this.running = false;\n    \n    // Clean up global reference\n    if ((window as any).vic20Instance === this) {\n      (window as any).vic20Instance = null;\n    }\n    \n    if (this.canvas && this.canvas.parentNode) {\n      this.canvas.parentNode.removeChild(this.canvas);\n    }\n    this.canvas = null;\n    this.module = null;\n    \n    // Hide the VIC-20 chips div when destroyed\n    const vic20Div = document.getElementById('vic20-chips-div');\n    if (vic20Div) {\n      vic20Div.style.display = 'none';\n      console.log(\"\u2705 Hidden VIC-20 chips div\");\n    }\n  }\n  \n\n \n  // Joystick support\n  private joymask0 = 0;\n  private joymask1 = 0;\n\n  setKeyInput(key: number, code: number, flags: number): void {\n    // Handle joystick input for VIC-20\n    if (key == 16 || key == 17 || key == 18 || key == 224) return; // meta keys\n    \n    var mask = 0;\n    var mask2 = 0;\n    \n    // Player 1 joystick (arrow keys + space)\n    if (key == 37) { key = 0x8; mask = 0x4; } // LEFT\n    if (key == 38) { key = 0xb; mask = 0x1; } // UP\n    if (key == 39) { key = 0x9; mask = 0x8; } // RIGHT\n    if (key == 40) { key = 0xa; mask = 0x2; } // DOWN\n    if (key == 32) { mask = 0x10; } // FIRE (space)\n    \n    // Player 2 joystick (WASD + E)\n    if (key == 65) { key = 65; mask2 = 0x4; } // LEFT (A)\n    if (key == 87) { key = 87; mask2 = 0x1; } // UP (W)\n    if (key == 68) { key = 68; mask2 = 0x8; } // RIGHT (D)\n    if (key == 83) { key = 83; mask2 = 0x2; } // DOWN (S)\n    if (key == 69) { mask2 = 0x10; } // FIRE (E)\n    \n    // Function keys\n    if (key == 113) { key = 0xf1; } // F2\n    if (key == 115) { key = 0xf3; } // F4\n    if (key == 119) { key = 0xf5; } // F8\n    if (key == 121) { key = 0xf7; } // F10\n    \n    if (flags & 1) { // KeyDown\n      this.joymask0 |= mask;\n      this.joymask1 |= mask2;\n    } else if (flags & 2) { // KeyUp\n      this.joymask0 &= ~mask;\n      this.joymask1 &= ~mask2;\n    }\n    \n    // Update joystick state in the chips-test emulator\n    if (this.module && typeof this.module.vic20_joystick === 'function') {\n      this.module.vic20_joystick(this.joymask0, this.joymask1);\n    } else if ((window as any).h && typeof (window as any).h.vic20_joystick === 'function') {\n      (window as any).h.vic20_joystick(this.joymask0, this.joymask1);\n    } else if ((window as any).h && typeof (window as any).h.__sargs_add_kvp === 'function') {\n      // Try to set joystick state via URL parameters\n      try {\n        (window as any).h.__sargs_add_kvp('joystick0', this.joymask0.toString());\n        (window as any).h.__sargs_add_kvp('joystick1', this.joymask1.toString());\n      } catch (e) {\n        console.log(\"\u274C Error setting joystick state:\", e);\n      }\n    }\n    \n    // Also try to write joystick state directly to VIC-20 I/O registers\n    if (this.module) {\n      // VIC-20 joystick port 1 (VIA 1, port A)\n      this.write(0x9111, this.joymask0);\n      // VIC-20 joystick port 2 (VIA 2, port A) \n      this.write(0x9121, this.joymask1);\n    }\n  }\n\n  // Simulate keyboard input for typing commands\n  private simulateKeyboardInput(text: string): void {\n    console.log(\"\uD83C\uDFAF Attempting to simulate keyboard input for:\", text);\n    \n    // Look for keyboard-related functions\n    const h = (window as any).h;\n    if (h) {\n      const keyboardFunctions = Object.keys(h).filter(fn => \n        fn.toLowerCase().includes('key') || \n        fn.toLowerCase().includes('input') || \n        fn.toLowerCase().includes('char') ||\n        fn.toLowerCase().includes('type') ||\n        fn.toLowerCase().includes('text') ||\n        fn.toLowerCase().includes('send') ||\n        fn.toLowerCase().includes('write')\n      );\n      \n      console.log(\"\uD83C\uDFAF Found keyboard functions:\", keyboardFunctions);\n      \n      // Try each keyboard function\n      for (const fn of keyboardFunctions) {\n        if (typeof h[fn] === 'function') {\n          console.log(`\uD83C\uDFAF Trying keyboard function: ${fn}`);\n          try {\n            h[fn](text);\n            console.log(`\u2705 Successfully called ${fn} with text: ${text}`);\n            return;\n          } catch (e) {\n            console.log(`\u274C Error calling ${fn}:`, e);\n          }\n        }\n      }\n      \n      // Try to find a function that can send text to the emulator\n      if (typeof h.sendText === 'function') {\n        console.log(\"\uD83C\uDFAF Trying sendText function...\");\n        try {\n          h.sendText(text);\n          console.log(`\u2705 Successfully sent text via sendText: ${text}`);\n          return;\n        } catch (e) {\n          console.log(`\u274C Error calling sendText:`, e);\n        }\n      }\n      \n      // Try to find a function that can write to the emulator input\n      if (typeof h.writeInput === 'function') {\n        console.log(\"\uD83C\uDFAF Trying writeInput function...\");\n        try {\n          h.writeInput(text);\n          console.log(`\u2705 Successfully wrote input: ${text}`);\n          return;\n        } catch (e) {\n          console.log(`\u274C Error calling writeInput:`, e);\n        }\n      }\n    }\n    \n    // Fallback to individual key simulation with delays\n    console.log(\"\uD83C\uDFAF No keyboard function found, trying individual key simulation with delays...\");\n    let delay = 0;\n    for (const char of text) {\n      setTimeout(() => {\n        const keyCode = char.charCodeAt(0);\n        this.simulateKeyPress(keyCode);\n      }, delay);\n      delay += 50; // 50ms delay between characters\n    }\n  }\n\n  private simulateKeyPress(keyCode: number): void {\n    console.log(`\uD83C\uDFAF Attempting to simulate key press for key code: ${keyCode}`);\n    \n    const h = (window as any).h;\n    if (!h) {\n      console.log(\"\u274C No 'h' object available for key simulation\");\n      return;\n    }\n    \n    // Log all available functions to see what keyboard functions exist\n    console.log(\"\uD83D\uDD0D Available functions on h object:\", Object.keys(h));\n    \n    // Try different approaches for keyboard input\n    const keyFunctions = [\n      'keydown', 'keypress', 'keyup', 'key', 'input', 'sendKey', 'pressKey',\n      'keyboard', 'keyboardInput', 'keyboardEvent', 'simulateKey', 'simulateKeyPress'\n    ];\n    \n    for (const funcName of keyFunctions) {\n      if (typeof h[funcName] === 'function') {\n        console.log(`\uD83C\uDFAF Trying ${funcName} function...`);\n        try {\n          // Try different parameter formats\n          h[funcName](keyCode);\n          console.log(`\u2705 ${funcName} called successfully with keyCode ${keyCode}`);\n          return;\n        } catch (e) {\n          console.log(`\u274C ${funcName} failed:`, e);\n        }\n      }\n    }\n    \n    // If no keyboard functions found, try to create a keyboard event and dispatch it\n    console.log(\"\uD83C\uDFAF Trying to create and dispatch keyboard event...\");\n    try {\n      const keyEvent = new KeyboardEvent('keydown', {\n        keyCode: keyCode,\n        which: keyCode,\n        key: keyCode === 112 ? 'F1' : keyCode === 13 ? 'Enter' : String.fromCharCode(keyCode),\n        code: keyCode === 112 ? 'F1' : keyCode === 13 ? 'Enter' : `Key${String.fromCharCode(keyCode)}`,\n        bubbles: true,\n        cancelable: true\n      });\n      \n      // Try to dispatch on the canvas\n      if (h.canvas) {\n        h.canvas.dispatchEvent(keyEvent);\n        console.log(`\u2705 Keyboard event dispatched on h.canvas for key ${keyCode}`);\n        return;\n      } else if (h.xc) {\n        h.xc.dispatchEvent(keyEvent);\n        console.log(`\u2705 Keyboard event dispatched on h.xc for key ${keyCode}`);\n        return;\n      } else if (this.canvas) {\n        this.canvas.dispatchEvent(keyEvent);\n        console.log(`\u2705 Keyboard event dispatched on this.canvas for key ${keyCode}`);\n        return;\n      }\n    } catch (e) {\n      console.log(\"\u274C Error creating/dispatching keyboard event:\", e);\n    }\n    \n    console.log(`\u274C No key function found for key ${keyCode} (${String.fromCharCode(keyCode)})`);\n  }\n\n  // Verify if the program was actually loaded into memory\n  private verifyProgramLoaded(expectedData: Uint8Array): void {\n    console.log(\"=== VERIFYING PROGRAM LOAD ===\");\n    \n    if (!(window as any).h) {\n      console.log(\"\u274C No 'h' object available for verification\");\n      return;\n    }\n    \n    const h = (window as any).h;\n    \n    // First, let's analyze what functions are available\n    console.log(\"=== ANALYZING AVAILABLE FUNCTIONS ===\");\n    const availableFunctions = Object.keys(h);\n    console.log(\"All available functions:\", availableFunctions);\n    \n    // Look for any function that might be related to program execution\n    const executionFunctions = availableFunctions.filter(func => \n      func.toLowerCase().includes('run') || \n      func.toLowerCase().includes('exec') || \n      func.toLowerCase().includes('start') || \n      func.toLowerCase().includes('main') ||\n      func.toLowerCase().includes('call') ||\n      func.toLowerCase().includes('jump')\n    );\n    console.log(\"Potential execution functions:\", executionFunctions);\n    \n    // Try calling _main if it exists (this might restart the program)\n    if (typeof h._main === 'function') {\n      console.log(\"Found _main function, trying to call it...\");\n      try {\n        h._main();\n        console.log(\"\u2705 Successfully called _main function\");\n      } catch (error) {\n        console.log(\"\u274C Error calling _main function:\", error);\n      }\n    }\n    \n    // Try to read memory at expected VIC-20 locations\n    const memoryFunctions = [\n      'vic20_read_memory', 'read_memory', 'memory_read', 'get_memory',\n      'vic20_memory_read', 'read_byte', 'get_byte'\n    ];\n    \n    let memoryReadFunction = null;\n    for (const funcName of memoryFunctions) {\n      if (typeof h[funcName] === 'function') {\n        memoryReadFunction = h[funcName];\n        console.log(`Found memory read function: ${funcName}`);\n        break;\n      }\n    }\n    \n    if (memoryReadFunction) {\n      // Check memory at common VIC-20 locations\n      const locations = [0x1001, 0x1200, 0x1000, 0x1201];\n      \n      for (const addr of locations) {\n        try {\n          const value = memoryReadFunction(addr);\n          console.log(`Memory at 0x${addr.toString(16).toUpperCase()}: 0x${value.toString(16).toUpperCase()} (${value})`);\n        } catch (error) {\n          console.log(`Error reading memory at 0x${addr.toString(16).toUpperCase()}:`, error);\n        }\n      }\n      \n      // Try to read the first few bytes of the expected program\n      if (expectedData.length >= 2) {\n        const loadAddress = expectedData[0] | (expectedData[1] << 8);\n        console.log(`Checking memory starting at load address: 0x${loadAddress.toString(16).toUpperCase()}`);\n        \n        for (let i = 0; i < Math.min(10, expectedData.length - 2); i++) {\n          try {\n            const addr = loadAddress + i;\n            const expected = expectedData[i + 2];\n            const actual = memoryReadFunction(addr);\n            const match = expected === actual ? \"\u2705\" : \"\u274C\";\n            console.log(`${match} Memory[0x${addr.toString(16).toUpperCase()}]: expected 0x${expected.toString(16).toUpperCase()}, got 0x${actual.toString(16).toUpperCase()}`);\n          } catch (error) {\n            console.log(`Error reading memory at offset ${i}:`, error);\n          }\n        }\n      }\n    } else {\n      console.log(\"\u274C No memory read function found\");\n      \n      // Try to get program state or loaded files info\n      const stateFunctions = [\n        'vic20_get_state', 'get_state', 'get_program_state', 'get_loaded_program',\n        'vic20_program_info', 'program_info', 'get_file_info'\n      ];\n      \n      for (const funcName of stateFunctions) {\n        if (typeof h[funcName] === 'function') {\n          try {\n            const state = h[funcName]();\n            console.log(`Program state from ${funcName}:`, state);\n          } catch (error) {\n            console.log(`Error calling ${funcName}:`, error);\n          }\n        }\n      }\n    }\n  }\n\n  private forceDisplayRefresh(): void {\n    console.log(\"\uD83D\uDD04 Forcing VIC-20 display refresh...\");\n    \n    // Try multiple approaches to refresh the display\n    if (this.module) {\n      // Method 1: Use requestAnimationFrame if available\n      if (typeof this.module.requestAnimationFrame === 'function') {\n        console.log(\"\u2705 Using module.requestAnimationFrame for display refresh\");\n        this.module.requestAnimationFrame(() => {\n          console.log(\"\u2705 Display refresh triggered via requestAnimationFrame\");\n        });\n      }\n      \n      // Method 2: Try to call any display-related functions\n      const displayFunctions = ['refresh', 'redraw', 'update', 'render', 'display'];\n      for (const funcName of displayFunctions) {\n        if (typeof this.module[funcName] === 'function') {\n          console.log(`\u2705 Calling module.${funcName}() for display refresh`);\n          try {\n            this.module[funcName]();\n          } catch (e) {\n            console.log(`\u274C Error calling ${funcName}:`, e);\n          }\n        }\n      }\n      \n      // Method 3: Try to trigger a frame update\n      if (typeof this.module._main === 'function') {\n        console.log(\"\u2705 Calling _main again to trigger frame update\");\n        try {\n          this.module._main();\n        } catch (e) {\n          console.log(\"\u274C Error calling _main for display refresh:\", e);\n        }\n      }\n    }\n    \n    // Method 4: Draw a visual indicator on the canvas\n    setTimeout(() => {\n      if (this.canvas) {\n        const ctx = this.canvas.getContext('2d');\n        if (ctx) {\n          // Draw a small indicator that the program is loaded\n          ctx.fillStyle = 'green';\n          ctx.fillRect(this.canvas.width - 20, 10, 10, 10);\n          ctx.fillStyle = 'white';\n          ctx.font = '12px monospace';\n          ctx.fillText('LOADED', this.canvas.width - 80, 20);\n          console.log(\"\u2705 Visual indicator drawn on canvas\");\n        }\n      }\n    }, 500);\n    \n    console.log(\"\u2705 Display refresh attempts completed\");\n  }\n\n  private verifyAndExecuteLoadedROM(prgData: Uint8Array): void {\n    console.log(\"\uD83D\uDD04 DISABLED: verifyAndExecuteLoadedROM to prevent crashes\");\n    console.log(\"\uD83D\uDD04 Skipping program verification and execution for safety\");\n    return;\n  }\n  \n  private triggerProgramExecution(): void {\n    console.log(\"\uD83D\uDD04 DISABLED: triggerProgramExecution to prevent crashes\");\n    console.log(\"\uD83D\uDD04 Skipping all execution function calls for safety\");\n    return;\n  }\n\n  private callDropFunctionsWithoutMemory(prgData: Uint8Array): void {\n    console.log(\"\uD83D\uDD04 DISABLED: callDropFunctionsWithoutMemory to prevent crashes\");\n    console.log(\"\uD83D\uDD04 Skipping all drop function calls for safety\");\n    return;\n  }\n\n  private simulateFileReading(prgData: Uint8Array): void {\n    console.log(\"\uD83C\uDFAF === SIMULATING FILE READING (DISABLED FOR SAFETY) ===\");\n    \n    // Temporarily disabled to prevent crashes\n    console.log(\"\uD83D\uDD04 Skipping emulator state check to prevent crashes\");\n    \n    // Create a File object from the PRG data\n    const blob = new Blob([prgData], { type: 'application/octet-stream' });\n    const file = new File([blob], 'program.prg', { type: 'application/octet-stream' });\n    console.log(\"\uD83D\uDCC1 Created File object:\", file.name, file.size, \"bytes\");\n    \n    // Store the file in h.dd (like the native drop handler does)\n    if (this.module && this.module.h) {\n      this.module.h.dd = file;\n      console.log(\"\uD83D\uDCC1 Stored file in h.dd\");\n    }\n    \n    // Find HEAPU8 for memory access\n    let heapU8: Uint8Array | null = null;\n    const h = this.module?.h;\n    \n    // Try multiple ways to find HEAPU8\n    if ((window as any).t && (window as any).t instanceof Uint8Array) {\n      heapU8 = (window as any).t;\n      console.log(\"\u2705 Found HEAPU8 via window.t\");\n    } else if ((window as any).r && (window as any).r instanceof Uint8Array) {\n      heapU8 = (window as any).r;\n      console.log(\"\u2705 Found HEAPU8 via window.r\");\n    } else if (h?.HEAPU8) {\n      heapU8 = h.HEAPU8;\n      console.log(\"\u2705 Found HEAPU8 via h.HEAPU8\");\n    } else if (h?.HEAP8) {\n      heapU8 = new Uint8Array(h.HEAP8.buffer);\n      console.log(\"\u2705 Found HEAPU8 via h.HEAP8 conversion\");\n    } else if (h?.HEAP) {\n      heapU8 = new Uint8Array(h.HEAP.buffer);\n      console.log(\"\u2705 Found HEAPU8 via h.HEAP conversion\");\n    }\n    \n    if (!heapU8) {\n      console.error(\"\u274C No WASM heap available for file reading simulation\");\n      return;\n    }\n    \n    // Parse PRG header to get load address\n    const loadAddress = prgData[0] | (prgData[1] << 8);\n    console.log(`\uD83D\uDCCD Load address from PRG header: 0x${loadAddress.toString(16).padStart(4, '0')} (${loadAddress})`);\n    \n    // Extract program data (skip 2-byte header)\n    const programData = prgData.slice(2);\n    console.log(`\uD83D\uDCE6 Program data size: ${programData.length} bytes`);\n    \n    // DEBUG: Memory contents before loading to see what's there\n    console.log(\"\uD83D\uDD0D DEBUG: Memory contents before loading:\");\n    const addressesToCheck = [0x1000, 0x1001, 0x1018, 0x1200];\n    for (const addr of addressesToCheck) {\n      try {\n        const beforeValue = heapU8[addr];\n        console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: 0x${beforeValue.toString(16).padStart(2, '0')} (before)`);\n      } catch (e) {\n        console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: <error> (${e})`);\n      }\n    }\n    \n    // Copy program data directly to load address\n    try {\n      heapU8.set(programData, loadAddress);\n      console.log(`\u2705 Successfully copied ${programData.length} bytes to address 0x${loadAddress.toString(16).padStart(4, '0')}`);\n    } catch (e) {\n      console.error(\"\u274C Error copying data to WASM heap:\", e);\n      return;\n    }\n    \n    // DEBUG: Verify the data was actually copied correctly\n    console.log(\"\uD83D\uDD0D DEBUG: Memory contents after loading:\");\n    for (let i = 0; i < Math.min(16, programData.length); i++) {\n      const addr = loadAddress + i;\n      try {\n        const afterValue = heapU8[addr];\n        const expectedValue = programData[i];\n        const match = afterValue === expectedValue ? \"\u2705\" : \"\u274C\";\n        console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: 0x${afterValue.toString(16).padStart(2, '0')} (expected: 0x${expectedValue.toString(16).padStart(2, '0')}) ${match}`);\n      } catch (e) {\n        console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: <error> (${e})`);\n      }\n    }\n    \n    // For now, just copy the data and don't interfere with normal drag-and-drop\n    console.log(\"\uD83D\uDD04 Data copied successfully - skipping drop function calls to avoid conflicts\");\n    \n    // Trigger execution with key presses after a delay\n    setTimeout(() => {\n      console.log(\"\uD83C\uDFAF Triggering execution with key presses...\");\n      this.simulateKeyPress(13); // RETURN\n    }, 200);\n    \n    setTimeout(() => {\n      this.simulateKeyPress(112); // F1\n    }, 300);\n    \n    setTimeout(() => {\n      this.simulateKeyPress(114); // F3\n    }, 400);\n    \n    // Also try to trigger execution via direct function calls\n    setTimeout(() => {\n      this.triggerProgramExecution();\n    }, 500);\n  }\n\n  private debugMemoryAfterLoading(): void {\n    console.log(\"\uD83D\uDD0D DEBUG: Checking memory after loading...\");\n    \n    try {\n      const h = (window as any).h;\n      if (!h) {\n        console.log(\"\u274C No 'h' object available for memory check\");\n        return;\n      }\n      \n      // Try to read memory at common VIC-20 addresses\n      const addressesToCheck = [\n        0x1000, // BASIC program start\n        0x1001, // Alternative BASIC start\n        0x1018, // Another common start\n        0x1200, // Another common start\n        0x2000, // Cartridge area\n        0x4000, // Cartridge area\n        0x6000, // Cartridge area\n        0x8000, // Character ROM\n        0x9000, // I/O area\n        0xc000, // BASIC ROM\n        0xe000, // KERNAL ROM\n      ];\n      \n      console.log(\"\uD83D\uDD0D DEBUG: Memory contents at key addresses:\");\n      \n      for (const addr of addressesToCheck) {\n        try {\n          // Try different memory reading approaches\n          let value = null;\n          \n          // Try direct memory access if available\n          if ((window as any).t && typeof (window as any).t[addr] !== 'undefined') {\n            value = (window as any).t[addr];\n            console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: 0x${value.toString(16).padStart(2, '0')} (global t)`);\n          } else if ((window as any).r && typeof (window as any).r[addr] !== 'undefined') {\n            value = (window as any).r[addr];\n            console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: 0x${value.toString(16).padStart(2, '0')} (global r)`);\n          } else if (h.HEAPU8 && typeof h.HEAPU8[addr] !== 'undefined') {\n            value = h.HEAPU8[addr];\n            console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: 0x${value.toString(16).padStart(2, '0')} (HEAPU8)`);\n          } else if (h.HEAP8 && typeof h.HEAP8[addr] !== 'undefined') {\n            value = h.HEAP8[addr];\n            console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: 0x${value.toString(16).padStart(2, '0')} (HEAP8)`);\n          } else if (h.HEAP && typeof h.HEAP[addr] !== 'undefined') {\n            value = h.HEAP[addr];\n            console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: 0x${value.toString(16).padStart(2, '0')} (HEAP)`);\n          } else {\n            console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: <no access> (no heap available)`);\n          }\n        } catch (e) {\n          console.log(`  - 0x${addr.toString(16).padStart(4, '0')}: <error> (${e})`);\n        }\n      }\n      \n      // Try to find any memory reading functions\n      console.log(\"\uD83D\uDD0D DEBUG: Looking for memory reading functions...\");\n      const memoryFunctions = Object.keys(h).filter(fn => \n        typeof h[fn] === 'function' && \n        (fn.toLowerCase().includes('read') || \n         fn.toLowerCase().includes('memory') || \n         fn.toLowerCase().includes('peek') ||\n         fn.toLowerCase().includes('get'))\n      );\n      console.log(\"  - Available memory functions:\", memoryFunctions);\n      \n      // Try to read a range of memory if we have a memory reading function\n      if (memoryFunctions.length > 0) {\n        const testFn = memoryFunctions[0];\n        console.log(`\uD83D\uDD0D DEBUG: Testing memory reading with ${testFn}...`);\n        \n        try {\n          // Try reading a range of memory\n          const testRange = [0x1000, 0x1001, 0x1002, 0x1003, 0x1004, 0x1005];\n          for (const addr of testRange) {\n            try {\n              const result = h[testFn](addr);\n              console.log(`  - ${testFn}(0x${addr.toString(16).padStart(4, '0')}): ${result}`);\n            } catch (e) {\n              console.log(`  - ${testFn}(0x${addr.toString(16).padStart(4, '0')}): <error> (${e})`);\n            }\n          }\n        } catch (e) {\n          console.log(`  - Error testing ${testFn}:`, e);\n        }\n      }\n      \n    } catch (error) {\n      console.log(\"\u274C Error during memory debugging:\", error);\n    }\n  }\n\n\n\n  private checkAndResetEmulatorState(): void {\n    console.log(\"\uD83D\uDD0D DEBUG: Checking emulator state before loading...\");\n    \n    try {\n      const h = (window as any).h;\n      if (!h) {\n        console.log(\"\u274C No 'h' object available for state check\");\n        return;\n      }\n      \n      // Check current state\n      console.log(\"\uD83D\uDD0D DEBUG: Current emulator state:\");\n      console.log(\"  - calledRun:\", h.calledRun);\n      console.log(\"  - running:\", this.running);\n      console.log(\"  - programLoaded:\", this.programLoaded);\n      \n      // Look for reset or initialization functions\n      const resetFunctions = Object.keys(h).filter(fn => \n        typeof h[fn] === 'function' && \n        (fn.toLowerCase().includes('reset') || \n         fn.toLowerCase().includes('init') || \n         fn.toLowerCase().includes('clear') ||\n         fn.toLowerCase().includes('boot') ||\n         fn.toLowerCase().includes('start'))\n      );\n      \n      console.log(\"\uD83D\uDD0D DEBUG: Available reset/init functions:\", resetFunctions);\n      \n      // Try to reset the emulator if needed\n      if (resetFunctions.length > 0) {\n        console.log(\"\uD83D\uDD04 Attempting to reset emulator state...\");\n        \n        for (const fn of resetFunctions) {\n          try {\n            console.log(`\uD83C\uDFAF Trying to call ${fn}...`);\n            h[fn]();\n            console.log(`\u2705 Successfully called ${fn}()`);\n            \n            // Wait a moment for reset to take effect\n            // Temporarily disabled setTimeout to prevent crashes\n            console.log(\"\uD83D\uDD04 Skipping setTimeout to prevent crashes\");\n            // setTimeout(() => {\n            //   console.log(\"\uD83D\uDD0D DEBUG: Emulator state after reset:\");\n            //   console.log(\"  - calledRun:\", h.calledRun);\n            //   console.log(\"  - running:\", this.running);\n            //   console.log(\"  - programLoaded:\", this.programLoaded);\n            // }, 100);\n            \n            return; // Successfully reset\n          } catch (e) {\n            console.log(`\u274C Error calling ${fn}():`, e);\n          }\n        }\n      }\n      \n      // If no reset functions, try calling _main to ensure emulator is running\n      if (typeof h._main === 'function') {\n        console.log(\"\uD83D\uDD04 Calling _main to ensure emulator is running...\");\n        try {\n          h._main();\n          console.log(\"\u2705 Called _main successfully\");\n        } catch (e) {\n          console.log(\"\u274C Error calling _main:\", e);\n        }\n      }\n      \n      // Try to clear any existing program data\n      console.log(\"\uD83D\uDD04 Attempting to clear existing program data...\");\n      if ((window as any).t) {\n        try {\n          // Temporarily disabled memory clearing to prevent crashes\n          console.log(\"\uD83D\uDD04 Skipping memory clearing to prevent crashes\");\n          // const heapU8 = (window as any).t;\n          // for (let addr = 0x1000; addr < 0x2000; addr++) {\n          //   heapU8[addr] = 0;\n          // }\n          // console.log(\"\u2705 Cleared BASIC program area\");\n        } catch (e) {\n          console.log(\"\u274C Error clearing program area:\", e);\n        }\n      }\n      \n    } catch (error) {\n      console.log(\"\u274C Error during emulator state check:\", error);\n    }\n  }\n\n  private tryDropApproach(prgData: Uint8Array): void {\n    // Original drop approach as fallback\n    console.log(\"\uD83D\uDD04 Trying drop approach as fallback...\");\n    \n    try {\n      const h = (window as any).h;\n      if (!h) {\n        console.log(\"\u274C No 'h' object available\");\n        return;\n      }\n      \n      // Create a proper File object with the program data\n      const file = new File([prgData], 'program.prg', { \n        type: 'application/octet-stream',\n        lastModified: Date.now()\n      });\n      \n      // Create a proper DataTransfer object\n      const dataTransfer = new DataTransfer();\n      dataTransfer.items.add(file);\n      \n      // Create a proper drop event\n      const dropEvent = new DragEvent('drop', {\n        bubbles: true,\n        cancelable: true,\n        dataTransfer: dataTransfer\n      });\n      \n      // Find the correct canvas that has the drop event listeners\n      let targetCanvas: HTMLCanvasElement | null = null;\n      \n      if (h.xc) {\n        targetCanvas = h.xc;\n        console.log(\"\u2705 Found canvas through h.xc:\", targetCanvas);\n      } else if (h.canvas) {\n        targetCanvas = h.canvas;\n        console.log(\"\u2705 Found canvas through h.canvas:\", targetCanvas);\n      } else {\n        console.log(\"\u274C No canvas found on h object\");\n        return;\n      }\n      \n      console.log(\"\uD83C\uDFAF Dispatching drop event on canvas:\", targetCanvas);\n      \n      // Dispatch the drop event on the canvas\n      const success = targetCanvas.dispatchEvent(dropEvent);\n      console.log(`\u2705 Drop event dispatched successfully: ${success}`);\n      \n      // Wait a moment for the event to be processed\n      setTimeout(() => {\n        console.log(\"\uD83D\uDD04 Drop event should have been processed by now\");\n        console.log(\"\uD83C\uDFAF Checking if program is running...\");\n        \n        // Check if calledRun changed (this might indicate the program started)\n        console.log(\"\uD83C\uDFAF Checking calledRun status:\", h.calledRun);\n        \n        // Try calling _main a few times to see if it triggers execution\n        for (let i = 0; i < 3; i++) {\n          try {\n            if (typeof h._main === 'function') {\n              h._main();\n              console.log(`\u2705 _main called successfully (attempt ${i + 1})`);\n            }\n          } catch (e) {\n            console.log(`\u274C Error calling _main (attempt ${i + 1}):`, e);\n          }\n          \n          // Wait a bit between calls\n          if (i < 2) {\n            setTimeout(() => {}, 100);\n          }\n        }\n        \n      }, 300);\n      \n    } catch (error) {\n      console.log(\"\u274C Error during drop approach:\", error);\n    }\n  }\n\n  private addCanvasDragAndDropListeners(): void {\n    // Try multiple canvas references\n    let targetCanvas = this.canvas;\n    \n    if (!targetCanvas) {\n      // Try to find canvas from the emulator\n      const h = (window as any).h;\n      if (h && h.canvas) {\n        targetCanvas = h.canvas;\n        console.log(\"\uD83C\uDFAF Using emulator canvas for drag-and-drop listeners\");\n      } else if (h && h.xc) {\n        targetCanvas = h.xc;\n        console.log(\"\uD83C\uDFAF Using emulator xc for drag-and-drop listeners\");\n      } else {\n        // Try to find canvas by ID\n        targetCanvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n        console.log(\"\uD83C\uDFAF Using document canvas for drag-and-drop listeners\");\n      }\n    }\n    \n    if (!targetCanvas) {\n      console.log(\"\u274C No canvas available for drag-and-drop listeners\");\n      return;\n    }\n    \n    console.log(\"\uD83C\uDFAF Adding drag-and-drop event listeners to canvas for manual file loading...\");\n    \n    try {\n      // Add drag-and-drop event listeners for manual file loading\n      targetCanvas.addEventListener('dragover', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log(\"\uD83C\uDFAF Drag over detected on canvas\");\n      });\n      \n      targetCanvas.addEventListener('drop', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log(\"\uD83C\uDFAF Manual drop event detected on canvas\");\n        \n        // Prevent infinite loops - only handle manual drops, not programmatic ones\n        if (this.isLoadingProgram) {\n          console.log(\"\u26A0\uFE0F Program already loading, ignoring drop event to prevent infinite loop\");\n          return;\n        }\n        \n        const files = e.dataTransfer?.files;\n        if (files && files.length > 0) {\n          const file = files[0];\n          console.log(\"\uD83C\uDFAF Manual file dropped:\", file.name, file.size, \"bytes\");\n          \n          const reader = new FileReader();\n          reader.onload = (event) => {\n            if (event.target?.result instanceof ArrayBuffer) {\n              const data = new Uint8Array(event.target.result);\n              console.log(\"\uD83C\uDFAF Manual file data loaded:\", data.length, \"bytes\");\n              console.log(\"\uD83C\uDFAF First 16 bytes:\", Array.from(data.slice(0, 16)));\n              \n              // Load the manually dropped file using the simplified method\n              this.loadProgram(data);\n            }\n          };\n          reader.readAsArrayBuffer(file);\n        }\n      });\n      \n      console.log(\"\u2705 Manual drag-and-drop listeners added to canvas\");\n    } catch (error) {\n      console.log(\"\u274C Error adding drag-and-drop listeners:\", error);\n    }\n  }\n\n  // Add this method to help debug drag-and-drop vs our approach\n  private captureDragAndDropData(): void {\n    console.log(\"\uD83D\uDD0D DEBUG: Setting up drag-and-drop capture...\");\n    \n    try {\n      const h = (window as any).h;\n      if (!h) {\n        console.log(\"\u274C No 'h' object available\");\n        return;\n      }\n      \n      // Store original functions\n      const originalBeginDrop = h.__sapp_emsc_begin_drop;\n      const originalDrop = h.__sapp_emsc_drop;\n      const originalEndDrop = h.__sapp_emsc_end_drop;\n      \n      // Override with logging versions\n      h.__sapp_emsc_begin_drop = function(...args: any[]) {\n        console.log(\"\uD83D\uDD0D CAPTURED: __sapp_emsc_begin_drop called with:\", args);\n        return originalBeginDrop.apply(this, args);\n      };\n      \n      h.__sapp_emsc_drop = function(...args: any[]) {\n        console.log(\"\uD83D\uDD0D CAPTURED: __sapp_emsc_drop called with:\", args);\n        return originalDrop.apply(this, args);\n      };\n      \n      h.__sapp_emsc_end_drop = function(...args: any[]) {\n        console.log(\"\uD83D\uDD0D CAPTURED: __sapp_emsc_end_drop called with:\", args);\n        return originalEndDrop.apply(this, args);\n      };\n      \n      // Also capture h.dd changes\n      let originalDd = h.dd;\n      Object.defineProperty(h, 'dd', {\n        get: function() { return originalDd; },\n        set: function(value) {\n          console.log(\"\uD83D\uDD0D CAPTURED: h.dd set to:\", value);\n          if (value && value.length > 0) {\n            console.log(\"\uD83D\uDD0D CAPTURED: First file in h.dd:\", value[0]);\n            console.log(\"\uD83D\uDD0D CAPTURED: File size:\", value[0].size);\n            console.log(\"\uD83D\uDD0D CAPTURED: File name:\", value[0].name);\n          }\n          originalDd = value;\n        }\n      });\n      \n      console.log(\"\u2705 Drag-and-drop capture set up. Now try dragging and dropping a file to see the captured data.\");\n      \n    } catch (error) {\n      console.log(\"\u274C Error setting up drag-and-drop capture:\", error);\n    }\n  }\n\n\n\n\n\n  private addSimpleFocusProtection(): void {\n    if (!this.canvas) return;\n\n    console.log(\"\u2705 Simple focus protection added - no global overrides\");\n  }\n\n  private addClickToFocusFunctionality(): void {\n    if (!this.canvas) return;\n\n    console.log(\"\uD83C\uDFAF Adding click-to-focus functionality to VIC-20 canvas\");\n\n    // Make canvas focusable\n    this.canvas.tabIndex = 0;\n    this.canvas.style.outline = 'none';\n\n    // Add click event listener to focus the canvas\n    this.canvas.addEventListener('click', (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      if (!this.emulatorFocused) {\n        this.emulatorFocused = true;\n        this.canvas?.focus();\n        this.canvas!.style.border = '2px solid #4CAF50'; // Green border when focused\n        this.canvas!.style.cursor = 'default'; // Change cursor to indicate focused state\n        console.log(\"\uD83C\uDFAF VIC-20 emulator focused - keyboard input enabled\");\n      }\n    });\n\n    // Add click event listener to document to unfocus when clicking elsewhere\n    document.addEventListener('click', (event) => {\n      // Check if the click was outside the canvas\n      if (this.canvas && !this.canvas.contains(event.target as Node)) {\n        if (this.emulatorFocused) {\n          this.emulatorFocused = false;\n          this.canvas!.style.border = '1px solid #333'; // Reset border\n          this.canvas!.style.cursor = 'pointer'; // Reset cursor\n          console.log(\"\uD83C\uDFAF VIC-20 emulator unfocused - keyboard input disabled\");\n        }\n      }\n    });\n\n    // Add keyboard event listeners that only work when focused\n    this.canvas.addEventListener('keydown', (event) => {\n      if (!this.emulatorFocused) {\n        return; // Ignore keyboard events when not focused\n      }\n      \n      console.log(`\uD83C\uDFAF Key pressed in VIC-20 emulator: ${event.key} (keyCode: ${event.keyCode})`);\n      \n      // Forward the key event to the VIC-20 emulator using direct function calls\n      this.forwardKeyEventToEmulator(event);\n    });\n\n    // Add keyup event listener\n    this.canvas.addEventListener('keyup', (event) => {\n      if (!this.emulatorFocused) {\n        return; // Ignore keyboard events when not focused\n      }\n      \n      console.log(`\uD83C\uDFAF Key released in VIC-20 emulator: ${event.key} (keyCode: ${event.keyCode})`);\n      \n      // Forward the keyup event to the VIC-20 emulator using direct function calls\n      this.forwardKeyUpEventToEmulator(event);\n    });\n\n    console.log(\"\u2705 Click-to-focus functionality added to VIC-20 canvas\");\n  }\n\n  private forwardKeyEventToEmulator(event: KeyboardEvent): void {\n    // Try to forward the key event to the VIC-20 emulator using direct function calls\n    const h = (window as any).h;\n    if (h) {\n      // Try the VIC-20 keyboard input function with correct parameters\n      if (typeof h._ === 'function') {\n        try {\n          h._(this.canvas, event.keyCode, 2, 0);\n          console.log(\"\uD83C\uDFAF Sent keydown to VIC-20 via _ function with keyCode:\", event.keyCode);\n        } catch (e) {\n          console.log(\"\u274C Error sending keydown:\", e);\n        }\n      }\n      \n      // Also try the alternative keyboard input function\n      if (typeof h.setKeyInput === 'function') {\n        try {\n          h.setKeyInput(event.keyCode, event.keyCode, 1); // 1 for keydown\n          console.log(\"\uD83C\uDFAF Sent keydown to VIC-20 via setKeyInput with keyCode:\", event.keyCode);\n        } catch (e) {\n          console.log(\"\u274C Error sending keydown via setKeyInput:\", e);\n        }\n      }\n    }\n  }\n\n  private forwardKeyUpEventToEmulator(event: KeyboardEvent): void {\n    // Try to forward the keyup event to the VIC-20 emulator using direct function calls\n    const h = (window as any).h;\n    if (h) {\n      // Try the VIC-20 keyboard input function with correct parameters\n      if (typeof h.Z === 'function') {\n        try {\n          h.Z(this.canvas, event.keyCode, 3, 0);\n          console.log(\"\uD83C\uDFAF Sent keyup to VIC-20 via Z function with keyCode:\", event.keyCode);\n        } catch (e) {\n          console.log(\"\u274C Error sending keyup:\", e);\n        }\n      }\n      \n      // Also try the alternative keyboard input function\n      if (typeof h.setKeyInput === 'function') {\n        try {\n          h.setKeyInput(event.keyCode, event.keyCode, 2); // 2 for keyup\n          console.log(\"\uD83C\uDFAF Sent keyup to VIC-20 via setKeyInput with keyCode:\", event.keyCode);\n        } catch (e) {\n          console.log(\"\u274C Error sending keyup via setKeyInput:\", e);\n        }\n      }\n    }\n  }\n} \n", "import { VIC20ChipsMachine } from \"../machine/vic20\";\nimport { Platform, Preset } from \"../common/baseplatform\";\nimport { PLATFORMS } from \"../common/emu\";\nimport { RasterVideo, AnimationTimer } from \"../common/emu\";\n\nconst VIC20_PRESETS : Preset[] = [\n  {id:'hello.c', name:'Hello World', category:'C'},\n  {id:'siegegame.c', name:'Siege Game'},\n  {id:'skeleton.cc65', name:'C/CC65 Boilerplate'},\n];\n\nconst VIC20_MEMORY_MAP = { main:[\n  {name:'RAM',          start:0x0000,size:0x1000,type:'ram'},\n  {name:'Screen RAM',   start:0x1000,size:0x0400,type:'ram'},\n  {name:'Color RAM',    start:0x9400,size:0x0400,type:'io'},\n  {name:'Character ROM',start:0x8000,size:0x1000,type:'rom'},\n  {name:'BASIC ROM',    start:0xc000,size:0x2000,type:'rom'},\n  {name:'KERNAL ROM',   start:0xe000,size:0x2000,type:'rom'},\n  {name:'VIC I/O',      start:0x9000,size:0x0400,type:'io'},\n  {name:'VIA 1',        start:0x9110,size:0x0010,type:'io'},\n  {name:'VIA 2',        start:0x9120,size:0x0010,type:'io'},\n] }\n\n// Chips-test VIC-20 platform\nclass VIC20ChipsPlatform implements Platform {\n  private machine: VIC20ChipsMachine;\n  private mainElement: HTMLElement;\n  private running = false;\n  private timer: AnimationTimer | null = null;\n\n  constructor(mainElement: HTMLElement) {\n    this.mainElement = mainElement;\n    this.machine = new VIC20ChipsMachine();\n  }\n\n  async start(): Promise<void> {\n    console.log(\"VIC20ChipsPlatform start() called - EMULATOR DISABLED FOR TESTING\");\n    \n    // DISABLED: Emulator loading for testing editor in one tab and isolated emulator in another\n    // The platform is available but no emulator is loaded or displayed\n    \n    // Clear the main element but don't add any emulator\n //   this.mainElement.innerHTML = '<div style=\"padding: 20px; text-align: center; color: #666;\">VIC-20 Emulator disabled for testing.<br>Use the isolated emulator in another tab.</div>';\n   this.mainElement.innerHTML = '<iframe id=\"vic20-iframe\" src=\"vic20-iframe.html\" style=\"width: 100%; height: 500px; border: none;\"></iframe>'; \n    console.log(\"VIC20ChipsPlatform: iframe created, setting up with auto-compilation\");\n    \n    // Wait for the iframe to load, then set it up with auto-compilation\n    setTimeout(() => {\n      this.setupIframeWithAutoCompilation();\n    }, 1000);\n    \n    // Set up a listener for compilation events to reload the iframe\n    this.setupCompilationListener();\n  }\n\n  private setupCompilationListener(): void {\n    // Listen for compilation events from the IDE\n    const originalSetCompileOutput = (window as any).setCompileOutput;\n    if (originalSetCompileOutput) {\n      (window as any).setCompileOutput = (data: any) => {\n        // Call the original function\n        originalSetCompileOutput(data);\n        \n        // If compilation was successful, reload the iframe with the new program\n        if (data && data.output && !data.errors) {\n          console.log(\"VIC20ChipsPlatform: Compilation detected, reloading iframe\");\n          setTimeout(() => {\n            this.setupIframeWithAutoCompilation();\n          }, 500);\n        }\n      };\n    }\n  }\n\n  private nextFrame(): void {\n    if (this.running)\n      this.machine.advanceFrame(() => false);\n  }\n\n  pause(): void {\n    this.running = false;\n    if (this.timer) this.timer.stop();\n  }\n\n  resume(): void {\n    this.running = true;\n    if (this.timer) this.timer.start();\n  }\n\n  loadROM(title: string, rom: Uint8Array): void {\n    console.log(\"VIC20ChipsPlatform loadROM called with title:\", title, \"and\", rom.length, \"bytes\");\n    \n    var frame = document.getElementById(\"vic20-iframe\") as HTMLIFrameElement;\n    if (frame && frame.contentWindow) {\n      const vic20_debug = (window as any).vic20_debug;\n      if (vic20_debug && vic20_debug.openIframeWithCurrentProgram) {\n        // Debug: Log the URL being generated\n        const iframeURL = vic20_debug.openIframeWithCurrentProgram();\n        console.log(\"VIC20ChipsPlatform: Generated iframe URL:\", iframeURL);\n        \n        if (iframeURL) {\n          // Add cache busting to ensure we get the latest version\n          const cacheBuster = '&t=' + Date.now();\n          const freshURL = iframeURL + cacheBuster;\n          console.log(\"VIC20ChipsPlatform: Loading fresh URL with cache buster:\", freshURL);\n          \n          // Set up a one-time load event listener\n          const onLoad = () => {\n            console.log(\"VIC20ChipsPlatform: iframe loaded, calling checkForProgramInURL\");\n            if ((frame.contentWindow as any).checkForProgramInURL) {\n              (frame.contentWindow as any).checkForProgramInURL();\n            }\n            frame.removeEventListener('load', onLoad);\n          };\n          frame.addEventListener('load', onLoad);\n          \n          // Set the location (this triggers the load event)\n          frame.contentWindow.location = freshURL;\n        } else {\n          console.error(\"VIC20ChipsPlatform: openIframeWithCurrentProgram returned null\");\n        }\n      } else {\n        console.error(\"VIC20ChipsPlatform: vic20_debug not available\");\n      }\n    } else {\n      console.error(\"VIC20ChipsPlatform: iframe not found or contentWindow not available\");\n    }\n    \n    if (this.machine) {\n      this.machine.loadProgram(rom);\n    } else {\n      console.error(\"VIC20ChipsPlatform: machine is null!\");\n    }\n  }\n\n  // New method to handle initial iframe setup with auto-compilation\n  private setupIframeWithAutoCompilation(): void {\n    console.log(\"VIC20ChipsPlatform: Setting up iframe with auto-compilation\");\n    \n    var frame = document.getElementById(\"vic20-iframe\") as HTMLIFrameElement;\n    if (!frame || !frame.contentWindow) {\n      console.error(\"VIC20ChipsPlatform: iframe not found or contentWindow not available\");\n      return;\n    }\n\n    const vic20_debug = (window as any).vic20_debug;\n    if (!vic20_debug || !vic20_debug.openIframeWithCurrentProgram) {\n      console.error(\"VIC20ChipsPlatform: vic20_debug not available\");\n      return;\n    }\n\n    // Check if we have a compiled program\n    const iframeURL = vic20_debug.openIframeWithCurrentProgram();\n    console.log(\"VIC20ChipsPlatform: Initial iframe URL check:\", iframeURL);\n    \n    if (iframeURL) {\n      // We have a compiled program, load it with cache busting\n      console.log(\"VIC20ChipsPlatform: Found compiled program, loading iframe\");\n      const cacheBuster = '&t=' + Date.now();\n      const freshURL = iframeURL + cacheBuster;\n      console.log(\"VIC20ChipsPlatform: Loading fresh URL with cache buster:\", freshURL);\n      this.loadIframeWithProgram(freshURL);\n    } else {\n      // No compiled program, trigger compilation\n      console.log(\"VIC20ChipsPlatform: No compiled program found, triggering compilation\");\n      this.triggerCompilationAndReload();\n    }\n  }\n\n  private loadIframeWithProgram(iframeURL: string): void {\n    var frame = document.getElementById(\"vic20-iframe\") as HTMLIFrameElement;\n    if (!frame || !frame.contentWindow) return;\n\n    // Set up a one-time load event listener\n    const onLoad = () => {\n      console.log(\"VIC20ChipsPlatform: iframe loaded, calling checkForProgramInURL\");\n      if ((frame.contentWindow as any).checkForProgramInURL) {\n        (frame.contentWindow as any).checkForProgramInURL();\n      }\n      frame.removeEventListener('load', onLoad);\n    };\n    frame.addEventListener('load', onLoad);\n    \n    // Set the location (this triggers the load event)\n    frame.contentWindow.location = iframeURL;\n  }\n\n  private triggerCompilationAndReload(): void {\n    console.log(\"VIC20ChipsPlatform: Triggering compilation...\");\n    \n    // Access the global worker to trigger compilation\n    const worker = (window as any).worker;\n    if (!worker) {\n      console.error(\"VIC20ChipsPlatform: Global worker not found\");\n      return;\n    }\n\n    // Set up a listener for compilation completion\n    const originalOnMessage = worker.onmessage;\n    worker.onmessage = (event: MessageEvent) => {\n      // Call the original handler\n      if (originalOnMessage) {\n        originalOnMessage.call(worker, event);\n      }\n      \n      // Check if compilation completed successfully\n      if (event.data && event.data.output) {\n        console.log(\"VIC20ChipsPlatform: Compilation completed, reloading iframe\");\n        \n        // Wait a bit for the compilation output to be processed\n        setTimeout(() => {\n          const vic20_debug = (window as any).vic20_debug;\n          if (vic20_debug && vic20_debug.openIframeWithCurrentProgram) {\n            const newIframeURL = vic20_debug.openIframeWithCurrentProgram();\n            if (newIframeURL) {\n              // Add a cache-busting parameter to ensure we get the latest version\n              const cacheBuster = '&t=' + Date.now();\n              const freshURL = newIframeURL + cacheBuster;\n              console.log(\"VIC20ChipsPlatform: Loading fresh URL with cache buster:\", freshURL);\n              this.loadIframeWithProgram(freshURL);\n            }\n          }\n          \n          // Restore original message handler\n          worker.onmessage = originalOnMessage;\n        }, 1000);\n      }\n    };\n\n    // Trigger compilation by sending a build message\n    if (worker.postMessage) {\n      worker.postMessage({\n        type: 'build',\n        files: (window as any).IDE?.getCurrentProject()?.getFiles() || {}\n      });\n    } else {\n      console.error(\"VIC20ChipsPlatform: Worker postMessage not available\");\n      worker.onmessage = originalOnMessage;\n    }\n  }\n\n  getPresets(): Preset[] {\n    return VIC20_PRESETS;\n  }\n\n  getMemoryMap() {\n    return VIC20_MEMORY_MAP;\n  }\n\n  getDefaultExtension() {\n    return \".c\";\n  }\n\n  getROMExtension(rom: Uint8Array): string {\n    // VIC-20 PRG files start with load address (little-endian)\n    // Common load addresses: 0x1001 (BASIC), 0x1200, 0x1300, etc.\n    if (rom && rom.length >= 2) {\n      const loadAddress = (rom[1] << 8) | rom[0];\n      // Check if it's a valid VIC-20 load address\n      if (loadAddress >= 0x1000 && loadAddress <= 0xFFFF) {\n        return \".prg\";\n      }\n    }\n    return \".bin\";\n  }\n\n  readAddress(a: number): number {\n    return this.machine.read(a);\n  }\n\n  writeAddress(a: number, v: number): void {\n    this.machine.write(a, v);\n  }\n\n  getCPUState() {\n    return this.machine.getCPUState();\n  }\n\n  saveState(): any {\n    return this.machine.saveState();\n  }\n\n  loadState(state: any): void {\n    this.machine.loadState(state);\n  }\n\n  reset(): void {\n    this.machine.reset();\n  }\n\n  setKeyInput(key: number, code: number, flags: number): void {\n    this.machine.setKeyInput(key, code, flags);\n  }\n\n  loadControlsState(state: any): void {\n    this.machine.loadControlsState(state);\n  }\n\n  saveControlsState(): any {\n    return this.machine.saveControlsState();\n  }\n\n  getFPS(): number {\n    return this.machine.getFPS();\n  }\n\n  showHelp() {\n    return \"https://8bitworkshop.com/docs/platforms/cbm/index.html#vic-20\";\n  }\n\n  isStable(): boolean {\n    // Assume stable for chips-test emulator\n    return true;\n  }\n\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  getToolForFilename(filename: string): string {\n    if (filename.endsWith(\".c\")) return \"cc65\";\n    if (filename.endsWith(\".dasm\")) return \"dasm\";\n    if (filename.endsWith(\".acme\")) return \"acme\";\n    if (filename.endsWith(\".wiz\")) return \"wiz\";\n    return \"cc65\";\n  }\n}\n\n// DISABLED: VIC-20 platform registration to allow testing editor in one tab and isolated emulator in another\n// PLATFORMS['vic20'] = VIC20ChipsPlatform;\n\n// ENABLED: Platform registration but emulator is disabled in start() method\nPLATFORMS['vic20'] = VIC20ChipsPlatform;\n\n// Export the platform class for dynamic loading\nexport default VIC20ChipsPlatform; "],
  "mappings": "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",
  "names": []
}
