import{H as h}from"./chunk-KXQZZRQB.js";import"./chunk-WAARL7ET.js";(function(){window.vic20_debug={generateIframeURL:(c,o=!0)=>{let e="vic20-iframe.html";if(o){let t=String.fromCharCode.apply(null,Array.from(c)),n=btoa(t);return`${e}?program=${encodeURIComponent(n)}`}else{let t=Array.from(c).map(n=>n.toString(16).padStart(2,"0")).join(" ");return`${e}?hex=${encodeURIComponent(t)}`}},openIframeWithCurrentProgram:()=>{var o;let c=(o=window.IDE)==null?void 0:o.getCurrentOutput();if(c&&c instanceof Uint8Array){let e=window.vic20_debug.generateIframeURL(c);return console.log("Opened VIC-20 iframe with current program:",e),e}else return console.error("No compiled program available. Compile first."),null},getCurrentProgramHex:()=>{var o;let c=(o=window.IDE)==null?void 0:o.getCurrentOutput();if(c&&c instanceof Uint8Array){let e=Array.from(c).map(t=>t.toString(16).padStart(2,"0")).join(" ");return console.log("Current program hex:",e),e}else return console.error("No compiled program available. Compile first."),null},getCurrentProgramInfo:()=>{var o;let c=(o=window.IDE)==null?void 0:o.getCurrentOutput();if(c&&c instanceof Uint8Array){if(console.log("Current program info:"),console.log("  Size:",c.length,"bytes"),console.log("  First 16 bytes:",Array.from(c.slice(0,16)).map(e=>e.toString(16).padStart(2,"0")).join(" ")),c.length>=2){let e=c[1]<<8|c[0];console.log("  Load address: 0x"+e.toString(16))}return{size:c.length,loadAddress:c.length>=2?c[1]<<8|c[0]:null,firstBytes:Array.from(c.slice(0,16))}}else return console.error("No compiled program available. Compile first."),null}},console.log("\u2705 VIC-20 debug functions added to window.vic20_debug"),console.log("Available functions:"),console.log("  - vic20_debug.generateIframeURL(programData, useBase64)"),console.log("  - vic20_debug.openIframeWithCurrentProgram()"),console.log("  - vic20_debug.getCurrentProgramHex()"),console.log("  - vic20_debug.getCurrentProgramInfo()")})();var p=class{constructor(){this.module=null;this.canvas=null;this.running=!1;this.programLoaded=!1;this.isLoadingProgram=!1;this.emulatorFocused=!1;this.cpu={getPC:()=>0,getSP:()=>0,isStable:()=>!0,saveState:()=>({PC:0,SP:0}),loadState:o=>{},reset:()=>{},connectMemoryBus:o=>{}};this.joymask0=0;this.joymask1=0;this.name="VIC-20 (chips-test)",this.description="VIC-20 emulator using chips-test WebAssembly"}getName(){return this.name}getDescription(){return this.description}async init(){try{console.log("Initializing chips-test VIC-20 emulator..."),this.canvas=document.createElement("canvas"),this.canvas.id="canvas",this.canvas.width=800,this.canvas.height=501,this.canvas.style.border="1px solid #333",this.canvas.style.width="100%",this.canvas.style.height="auto",this.canvas.style.maxWidth="800px",this.canvas.style.maxHeight="600px",this.canvas.style.outline="none",this.canvas.style.cursor="pointer";let o=document.getElementById("vic20-chips-div"),e=document.getElementById("vic20-chips-screen");o&&e?(e.appendChild(this.canvas),console.log("\u2705 Added VIC-20 canvas to pre-existing div")):(document.body.appendChild(this.canvas),console.log("\u2705 Added VIC-20 canvas to document body")),this.connectCanvasToEmulator(),this.addClickToFocusFunctionality(),this.addSimpleFocusProtection(),this.loadVIC20ScriptIfNeeded(),this.addCanvasDragAndDropListeners(),setTimeout(()=>{this.detectModule(),this.enableJoystickSupport()},1e3)}catch(o){console.error("Error initializing VIC-20 chips emulator:",o)}}loadVIC20ScriptIfNeeded(){if(typeof window.h!="undefined"){console.log("\u2705 VIC-20 script already loaded");return}if(document.querySelector('script[src*="vic20.js"]')){console.log("\u2705 VIC-20 script tag already exists, waiting for it to load");return}console.log("\u{1F527} Loading VIC-20 script...");let e=document.createElement("script");e.src=`res/vic20.js?t=${Date.now()}`,e.async=!0,e.onload=()=>{console.log("\u2705 VIC-20 script loaded successfully"),setTimeout(()=>{console.log("\u{1F50D} Checking for global keyboard event listeners...");let t=window.h;t&&(console.log("\u{1F50D} VIC-20 'h' object functions:",Object.keys(t).filter(n=>typeof t[n]=="function")),t.canvas&&(console.log("\u{1F50D} VIC-20 canvas found:",t.canvas),console.log("\u{1F50D} Canvas tabIndex:",t.canvas.tabIndex),console.log("\u{1F50D} Canvas focusable:",t.canvas.tabIndex>=0)))},1e3)},e.onerror=t=>{console.error("\u274C Failed to load VIC-20 script:",t)},document.head.appendChild(e)}detectModule(){if(typeof window.Module!="undefined"&&window.Module)console.log("Found Module object, setting module reference"),this.module=window.Module;else if(window.h)console.log("Found 'h' object, using as module"),this.module=window.h;else{console.log("VIC-20 module not detected yet, will retry later");return}console.log("VIC-20 chips-test emulator module detected")}enableJoystickSupport(){if(console.log("\u{1F527} Enabling joystick support..."),window.h&&typeof window.h.__sargs_add_kvp=="function")try{window.h.__sargs_add_kvp("joystick","true"),console.log("\u2705 Joystick support enabled via URL parameters")}catch(o){console.log("\u274C Error enabling joystick support:",o)}if(this.module&&typeof this.module.vic20_enable_joystick=="function")try{this.module.vic20_enable_joystick(!0),console.log("\u2705 Joystick support enabled via module function")}catch(o){console.log("\u274C Error enabling joystick support in module:",o)}}connectCanvasToEmulator(){if(!this.canvas){console.log("\u274C No canvas available for emulator connection");return}console.log("\u{1F517} Connecting canvas to VIC-20 emulator for display output..."),this.module&&(typeof this.module.canvas=="undefined"&&(this.module.canvas=this.canvas,console.log("\u2705 Connected canvas to module.canvas")),typeof window.canvas=="undefined"&&(window.canvas=this.canvas,console.log("\u2705 Connected canvas to window.canvas")),typeof this.module.requestAnimationFrame=="function"&&console.log("\u2705 Module has requestAnimationFrame - display should work")),this.addCanvasDragAndDropListeners(),setTimeout(()=>{if(this.canvas){let o=this.canvas.getContext("2d");o&&(o.fillStyle="black",o.fillRect(0,0,this.canvas.width,this.canvas.height),o.fillStyle="white",o.font="16px monospace",o.fillText("VIC-20 Emulator Ready",10,30),console.log("\u2705 Canvas is working - test pattern drawn"))}},1e3)}async waitForModuleDetection(){let o=0,e=20;for(;o<e;){if(this.module||window.Module||window.h){this.detectModule();break}await new Promise(t=>setTimeout(t,100)),o++}o>=e&&(console.log("VIC-20 module detection timed out, but emulator should still work"),this.detectModule())}run(){this.module&&this.running||(this.running=!0,this.module&&typeof this.module.vic20_run=="function"?this.module.vic20_run():typeof window.vic20_run=="function"&&window.vic20_run())}stop(){this.running=!1}reset(){this.module&&typeof this.module.vic20_reset=="function"?this.module.vic20_reset():typeof window.vic20_reset=="function"&&window.vic20_reset()}advanceFrame(o){return 0}loadROM(o,e){console.log(`VIC20ChipsPlatform loadROM called with title: ${e} and ${o.length} bytes`);let t=o;this.debugCompilationOutput(),this.loadProgram(t),this.addGlobalDebugFunctions()}loadControlsState(o){}saveControlsState(){return{}}loadProgram(o){if(console.log("VIC20ChipsPlatform loadROM called with title: hello.c and",o.length,"bytes"),this.isLoadingProgram){console.log("\u26A0\uFE0F Program already loading, ignoring to prevent infinite loop");return}this.isLoadingProgram=!0;try{let e=window.h;if(!e){console.log("\u274C No 'h' object available for loading program");return}if(console.log("\u2705 Found 'h' object, using as module"),typeof e.__sapp_emsc_begin_drop=="function"){console.log("\u{1F3AF} Loading program via drop function...");let t=new File([o],"main.prg",{type:"application/octet-stream"}),n=new DataTransfer;n.items.add(t);let r=new DragEvent("drop",{dataTransfer:n,bubbles:!0,cancelable:!0}),s=document.getElementById("canvas");s?(s.dispatchEvent(r),console.log("\u2705 Drop event dispatched to canvas"),setTimeout(()=>{console.log("\u{1F3AF} Executing loaded program..."),this.executeLoadedProgram()},1e3)):console.log("\u274C Canvas not found")}else console.log("\u274C No drop function available")}catch(e){console.error("Error loading program:",e)}finally{setTimeout(()=>{this.isLoadingProgram=!1},2e3)}}executeLoadedProgram(){console.log("\u{1F3AF} Executing loaded program...");let o=window.h;if(!o){console.log("\u274C No 'h' object available for execution");return}let e=Object.keys(o).filter(t=>t.toLowerCase().includes("run")||t.toLowerCase().includes("execute")||t.toLowerCase().includes("start")||t.toLowerCase().includes("main"));if(console.log("\u{1F3AF} Found potential execution functions:",e),typeof o.__sapp_emsc_begin_drop=="function"){console.log("\u{1F3AF} Trying __sapp_emsc_begin_drop...");try{o.__sapp_emsc_begin_drop(),console.log("\u2705 Successfully called __sapp_emsc_begin_drop")}catch(t){console.log("\u274C Error calling __sapp_emsc_begin_drop:",t)}}for(let t of e)if(typeof o[t]=="function"){console.log(`\u{1F3AF} Trying ${t}...`);try{o[t](),console.log(`\u2705 Successfully called ${t}`);break}catch(n){console.log(`\u274C Error calling ${t}:`,n)}}}loadProgramViaURL(o){console.log("=== ATTEMPTING URL PARAMETER LOAD ===");let e;o.length>=2&&o[0]===24&&o[1]===16?(console.log("Program already has PRG header, using as-is"),e=o):(console.log("Adding PRG header to program"),e=new Uint8Array(o.length+2),e[0]=24,e[1]=16,e.set(o,2));let t=new Blob([e],{type:"application/octet-stream"}),n=URL.createObjectURL(t);console.log("Created temporary file URL:",n);let r=new URL(window.location.href);if(r.searchParams.set("file",n),r.searchParams.set("autorun","1"),r.searchParams.set("joystick","true"),console.log("New URL with file parameter and joystick:",r.toString()),window.h){let s=window.h,i=Object.keys(s).filter(l=>l.toLowerCase().includes("url")||l.toLowerCase().includes("param")||l.toLowerCase().includes("args")||l.toLowerCase().includes("parse"));console.log("URL-related functions found:",i);for(let l of i)if(typeof s[l]=="function"){console.log(`Trying to call ${l}...`);try{s[l](),console.log(`\u2705 Successfully called ${l}`)}catch(a){console.log(`\u274C Error calling ${l}:`,a)}}if(typeof s.__sargs_add_kvp=="function"){console.log("Trying to add file parameter via __sargs_add_kvp...");try{s.__sargs_add_kvp("file",n),s.__sargs_add_kvp("autorun","1"),s.__sargs_add_kvp("joystick","true");let a=new URLSearchParams(window.location.search).get("input");a&&(console.log("Found input parameter:",a),s.__sargs_add_kvp("input",a)),console.log("\u2705 Successfully added file parameters including joystick support")}catch(l){console.log("\u274C Error adding file parameters:",l)}}}setTimeout(()=>{console.log("Falling back to drop method..."),this.loadProgramViaDrop(e)},1e3)}loadProgramViaDrop(o){console.log("=== ATTEMPTING DROP METHOD LOAD ===");let e=o[1]<<8|o[0];console.log("Detected load address: 0x"+e.toString(16).toUpperCase()+" ("+e+")"),console.log("PRG header bytes: 0x"+o[0].toString(16).toUpperCase()+" 0x"+o[1].toString(16).toUpperCase()),console.log(e===4097||e===4608||e===4120?e===4120?"\u2705 Valid VIC-20 BASIC program detected (0x1018) - alternative load address":"\u2705 Valid VIC-20 program detected":"\u26A0\uFE0F Unexpected load address - may not be a valid VIC-20 program");let t=window.h,n=Object.keys(window).filter(a=>typeof window[a]=="function"&&(a.toLowerCase().includes("drop")||a.toLowerCase().includes("load")||a.toLowerCase().includes("run"))),r=this.module?Object.keys(this.module).filter(a=>typeof this.module[a]=="function"&&(a.toLowerCase().includes("drop")||a.toLowerCase().includes("load")||a.toLowerCase().includes("run"))):[];console.log("Available window functions:",n),console.log("Available module functions:",r),console.log("PRG data length:",o.length),console.log("PRG header:",o[0],o[1]),console.log("First few bytes of program:",o.slice(0,10));let s;try{if(typeof this.module._malloc=="function")s=this.module._malloc(o.length),console.log("\u2705 Allocated memory at address:",s);else if(typeof this.module._fs_emsc_alloc=="function")s=this.module._fs_emsc_alloc(o.length),console.log("\u2705 Allocated memory using _fs_emsc_alloc at address:",s);else{console.log("\u274C No memory allocation function available");return}}catch(a){console.log("\u274C Error allocating memory:",a);return}try{if(this.module.HEAPU8)this.module.HEAPU8.set(o,s),console.log("\u2705 Copied PRG data to WASM heap");else if(this.module.HEAP8)this.module.HEAP8.set(o,s),console.log("\u2705 Copied PRG data to WASM heap using HEAP8");else if(this.module.HEAP){for(let a=0;a<o.length;a++)this.module.HEAP[s+a]=o[a];console.log("\u2705 Copied PRG data to WASM heap using generic HEAP")}else{console.log("\u274C No WASM heap available - trying alternative approach"),this.callDropFunctionsWithoutMemory(o);return}}catch(a){console.log("\u274C Error copying data to WASM heap:",a),console.log("Trying alternative approach without memory allocation..."),this.callDropFunctionsWithoutMemory(o);return}console.log("PRG header:",o[0],o[1]),console.log("First few bytes of program:",o.slice(0,10)),console.log("Attempting to trigger drag-and-drop functionality using 'h' object"),console.log("PRG data to load:",o),console.log("PRG data length:",o.length),console.log("First 10 bytes:",o.slice(0,10));let i=["__sapp_emsc_begin_drop","__sapp_emsc_drop","__sapp_emsc_end_drop"];if(i.every(a=>typeof t[a]=="function")){console.log("Found complete drop sequence, calling all three functions...");try{t.__sapp_emsc_begin_drop(),console.log("Called __sapp_emsc_begin_drop successfully")}catch(a){console.log("\u274C Error calling __sapp_emsc_begin_drop:",a)}try{t.__sapp_emsc_drop(s,o.length),console.log("Called __sapp_emsc_drop successfully")}catch(a){console.log("\u274C Error calling __sapp_emsc_drop:",a)}try{t.__sapp_emsc_end_drop(),console.log("Called __sapp_emsc_end_drop successfully")}catch(a){console.log("\u274C Error calling __sapp_emsc_end_drop:",a)}}else console.log("\u274C Missing drop functions:",i.filter(a=>typeof t[a]!="function"));if(console.log("=== SIMPLIFIED EXECUTION APPROACH ==="),typeof this.module._main=="function")try{this.module._main(),console.log("\u2705 Calling _main to ensure emulator is running...")}catch(a){console.log("\u274C Error calling _main:",a)}console.log("\u2705 Program loaded and emulator should be running"),console.log("\u2705 Check the VIC-20 screen for output"),console.log("\u2705 Try clicking on the canvas to interact with the emulator"),this.forceDisplayRefresh(),console.log("\u{1F504} About to call verifyAndExecuteLoadedROM..."),this.verifyAndExecuteLoadedROM(o),console.log("\u2705 VIC-20 program loading complete!"),console.log("\u2705 The emulator should now be running with your program"),console.log("\u2705 Check the VIC-20 screen for any output"),console.log("\u2705 You can interact with the emulator by clicking on the canvas"),this.tryDirectMemoryLoading(o),this.debugCompilationOutput(),this.tryManualExecution(o),this.tryDropApproach(o)}debugCompilationOutput(){var o;if(console.log("=== DEBUGGING COMPILATION OUTPUT ==="),typeof window.worker!="undefined"&&(console.log("\u2705 Worker found, checking virtual file system..."),window.worker.store)){console.log("\u2705 Store found, checking files...");let e=Object.keys(window.worker.store.workfs||{});if(console.log("Files in virtual file system:",e),window.worker.store.workfs.main){let t=window.worker.store.workfs.main;console.log("Main file found:",t),console.log("Main file size:",t.data.length),console.log("Main file first 32 bytes:",Array.from(t.data.slice(0,32)).map(n=>n.toString(16).padStart(2,"0")).join(" "))}if(window.worker.store.workfs["main.map"]){let t=window.worker.store.workfs["main.map"];console.log("Map file found:",t),console.log("Map file content:",t.data)}}typeof window.builder!="undefined"&&(console.log("\u2705 Builder found"),console.log("Builder steps:",window.builder.steps)),typeof window.current_output!="undefined"&&(console.log("\u2705 Current output found:",window.current_output),console.log("Current output length:",(o=window.current_output)==null?void 0:o.length),window.current_output&&window.current_output.length>0&&(console.log("Current output first 32 bytes (hex):",Array.from(window.current_output.slice(0,32)).map(e=>e.toString(16).padStart(2,"0")).join(" ")),console.log("Current output first 32 bytes (decimal):",Array.from(window.current_output.slice(0,32)).join(" ")))),typeof window.compparams!="undefined"&&console.log("\u2705 Compilation parameters found:",window.compparams),typeof window.platform!="undefined"&&window.platform.debugSymbols&&console.log("\u2705 Debug symbols found:",window.platform.debugSymbols)}addGlobalDebugFunctions(){window.vic20_debug={loadProgram:o=>this.loadProgram(o),getCanvas:()=>this.getCanvas(),getModule:()=>this.module,getCPUState:()=>this.getCPUState(),readMemory:o=>this.read(o),writeMemory:(o,e)=>this.write(o,e),reset:()=>this.reset(),run:()=>this.run(),stop:()=>this.stop(),generateIframeURL:(o,e=!0)=>{let t="vic20-iframe.html";if(e){let n=String.fromCharCode.apply(null,Array.from(o)),r=btoa(n);return`${t}?program=${encodeURIComponent(r)}`}else{let n=Array.from(o).map(r=>r.toString(16).padStart(2,"0")).join(" ");return`${t}?hex=${encodeURIComponent(n)}`}},openIframeWithCurrentProgram:()=>{var e;let o=(e=window.IDE)==null?void 0:e.getCurrentOutput();if(o&&o instanceof Uint8Array){let t=window.vic20_debug.generateIframeURL(o);window.open(t,"_blank"),console.log("Opened VIC-20 iframe with current program:",t)}else console.error("No compiled program available. Compile first.")}},console.log("\u2705 VIC-20 debug functions added to window.vic20_debug"),console.log("Available functions:"),console.log("  - vic20_debug.loadProgram(data)"),console.log("  - vic20_debug.getCanvas()"),console.log("  - vic20_debug.getModule()"),console.log("  - vic20_debug.getCPUState()"),console.log("  - vic20_debug.readMemory(address)"),console.log("  - vic20_debug.writeMemory(address, value)"),console.log("  - vic20_debug.reset()"),console.log("  - vic20_debug.run()"),console.log("  - vic20_debug.stop()"),console.log("  - vic20_debug.generateIframeURL(programData, useBase64)"),console.log("  - vic20_debug.openIframeWithCurrentProgram()")}loadProgramDirectly(o){if(console.log("=== LOADING PROGRAM DIRECTLY ==="),!this.module){console.log("\u274C No module available");return}try{let e=o[1]<<8|o[0],t=o.slice(2);console.log("Load address:",e.toString(16)),console.log("Program data length:",t.length);for(let r=0;r<t.length;r++){let s=e+r;this.write(s,t[r])}console.log("\u2705 Program loaded directly into VIC-20 memory"),e===4097&&(this.write(43,e&255),this.write(44,e>>8&255),this.write(45,e+t.length&255),this.write(46,e+t.length>>8&255),console.log("\u2705 BASIC pointers set"));let n=window.h;n?(console.log("\u{1F50D} Checking for vic20_reset function..."),typeof n.vic20_reset=="function"?(n.vic20_reset(),console.log("\u2705 VIC-20 reset called")):console.log("\u274C vic20_reset function not found"),console.log("\u{1F50D} Checking for vic20_set_pc function..."),typeof n.vic20_set_pc=="function"?(n.vic20_set_pc(e),console.log("\u2705 PC set to load address")):console.log("\u274C vic20_set_pc function not found"),console.log("\u{1F50D} Trying alternative reset methods..."),typeof n.reset=="function"&&(n.reset(),console.log("\u2705 h.reset() called")),typeof n.vic20_reset_cpu=="function"&&(n.vic20_reset_cpu(),console.log("\u2705 h.vic20_reset_cpu() called")),typeof n.vic20_run=="function"&&(n.vic20_run(),console.log("\u2705 h.vic20_run() called")),console.log("\u{1F50D} Trying to trigger execution via _main..."),typeof n._main=="function"&&(n._main(),console.log("\u2705 h._main() called to trigger execution"))):console.log("\u274C No 'h' object available for execution"),this.forceDisplayRefresh()}catch(e){console.log("\u274C Error in direct loading:",e)}}tryManualExecution(o){if(console.log("=== TRYING MANUAL EXECUTION ==="),!this.module){console.log("\u274C No module available for manual execution");return}try{let e=o[1]<<8|o[0],t=o.slice(2);console.log("Manual execution - Load address:",e.toString(16)),console.log("Manual execution - Program data length:",t.length);for(let n=0;n<t.length;n++){let r=e+n;this.write(r,t[n])}console.log("\u2705 Program loaded directly into VIC-20 memory for manual execution"),e===4097&&(this.write(43,e&255),this.write(44,e>>8&255),this.write(45,e+t.length&255),this.write(46,e+t.length>>8&255),console.log("\u2705 BASIC pointers set for manual execution")),typeof this.module.vic20_reset=="function"&&(this.module.vic20_reset(),console.log("\u2705 VIC-20 reset called for manual execution")),typeof this.module.vic20_set_pc=="function"&&(this.module.vic20_set_pc(e),console.log("\u2705 PC set to load address for manual execution"))}catch(e){console.log("\u274C Error in manual execution:",e)}}tryDirectMemoryLoading(o){if(console.log("=== TRYING DIRECT MEMORY LOADING ==="),!this.module){console.log("\u274C No module available for direct memory loading");return}let e=o[1]<<8|o[0],t=o.slice(2);console.log("Load address:",e.toString(16)),console.log("Program data length:",t.length);try{for(let n=0;n<t.length;n++){let r=e+n;this.write(r,t[n])}console.log("\u2705 Program loaded directly into VIC-20 memory"),e===4097&&(this.write(43,e&255),this.write(44,e>>8&255),this.write(45,e+t.length&255),this.write(46,e+t.length>>8&255),console.log("\u2705 BASIC pointers set for program execution")),typeof this.module.vic20_reset=="function"&&(this.module.vic20_reset(),console.log("\u2705 VIC-20 reset called to start program execution"))}catch(n){console.log("\u274C Error in direct memory loading:",n)}}getCanvas(){return this.canvas}getFPS(){return 60}read(o){return this.module&&this.module.vic20_read_memory?this.module.vic20_read_memory(o):0}write(o,e){this.module&&this.module.vic20_write_memory&&this.module.vic20_write_memory(o,e)}getCPUState(){return{PC:0,SP:0}}saveState(){if(this.module&&this.module.vic20_save_state){let o=this.module.vic20_save_state();return{c:{PC:0,SP:0},b:o}}return{c:{PC:0,SP:0},b:null}}loadState(o){this.module&&this.module.vic20_load_state&&o.b&&this.module.vic20_load_state(o.b)}destroy(){this.running=!1,window.vic20Instance===this&&(window.vic20Instance=null),this.canvas&&this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this.canvas=null,this.module=null;let o=document.getElementById("vic20-chips-div");o&&(o.style.display="none",console.log("\u2705 Hidden VIC-20 chips div"))}setKeyInput(o,e,t){if(!(o==16||o==17||o==18||o==224)){var n=0,r=0;if(o==37&&(o=8,n=4),o==38&&(o=11,n=1),o==39&&(o=9,n=8),o==40&&(o=10,n=2),o==32&&(n=16),o==65&&(o=65,r=4),o==87&&(o=87,r=1),o==68&&(o=68,r=8),o==83&&(o=83,r=2),o==69&&(r=16),o==113&&(o=241),o==115&&(o=243),o==119&&(o=245),o==121&&(o=247),t&1?(this.joymask0|=n,this.joymask1|=r):t&2&&(this.joymask0&=~n,this.joymask1&=~r),this.module&&typeof this.module.vic20_joystick=="function")this.module.vic20_joystick(this.joymask0,this.joymask1);else if(window.h&&typeof window.h.vic20_joystick=="function")window.h.vic20_joystick(this.joymask0,this.joymask1);else if(window.h&&typeof window.h.__sargs_add_kvp=="function")try{window.h.__sargs_add_kvp("joystick0",this.joymask0.toString()),window.h.__sargs_add_kvp("joystick1",this.joymask1.toString())}catch(s){console.log("\u274C Error setting joystick state:",s)}this.module&&(this.write(37137,this.joymask0),this.write(37153,this.joymask1))}}simulateKeyboardInput(o){console.log("\u{1F3AF} Attempting to simulate keyboard input for:",o);let e=window.h;if(e){let n=Object.keys(e).filter(r=>r.toLowerCase().includes("key")||r.toLowerCase().includes("input")||r.toLowerCase().includes("char")||r.toLowerCase().includes("type")||r.toLowerCase().includes("text")||r.toLowerCase().includes("send")||r.toLowerCase().includes("write"));console.log("\u{1F3AF} Found keyboard functions:",n);for(let r of n)if(typeof e[r]=="function"){console.log(`\u{1F3AF} Trying keyboard function: ${r}`);try{e[r](o),console.log(`\u2705 Successfully called ${r} with text: ${o}`);return}catch(s){console.log(`\u274C Error calling ${r}:`,s)}}if(typeof e.sendText=="function"){console.log("\u{1F3AF} Trying sendText function...");try{e.sendText(o),console.log(`\u2705 Successfully sent text via sendText: ${o}`);return}catch(r){console.log("\u274C Error calling sendText:",r)}}if(typeof e.writeInput=="function"){console.log("\u{1F3AF} Trying writeInput function...");try{e.writeInput(o),console.log(`\u2705 Successfully wrote input: ${o}`);return}catch(r){console.log("\u274C Error calling writeInput:",r)}}}console.log("\u{1F3AF} No keyboard function found, trying individual key simulation with delays...");let t=0;for(let n of o)setTimeout(()=>{let r=n.charCodeAt(0);this.simulateKeyPress(r)},t),t+=50}simulateKeyPress(o){console.log(`\u{1F3AF} Attempting to simulate key press for key code: ${o}`);let e=window.h;if(!e){console.log("\u274C No 'h' object available for key simulation");return}console.log("\u{1F50D} Available functions on h object:",Object.keys(e));let t=["keydown","keypress","keyup","key","input","sendKey","pressKey","keyboard","keyboardInput","keyboardEvent","simulateKey","simulateKeyPress"];for(let n of t)if(typeof e[n]=="function"){console.log(`\u{1F3AF} Trying ${n} function...`);try{e[n](o),console.log(`\u2705 ${n} called successfully with keyCode ${o}`);return}catch(r){console.log(`\u274C ${n} failed:`,r)}}console.log("\u{1F3AF} Trying to create and dispatch keyboard event...");try{let n=new KeyboardEvent("keydown",{keyCode:o,which:o,key:o===112?"F1":o===13?"Enter":String.fromCharCode(o),code:o===112?"F1":o===13?"Enter":`Key${String.fromCharCode(o)}`,bubbles:!0,cancelable:!0});if(e.canvas){e.canvas.dispatchEvent(n),console.log(`\u2705 Keyboard event dispatched on h.canvas for key ${o}`);return}else if(e.xc){e.xc.dispatchEvent(n),console.log(`\u2705 Keyboard event dispatched on h.xc for key ${o}`);return}else if(this.canvas){this.canvas.dispatchEvent(n),console.log(`\u2705 Keyboard event dispatched on this.canvas for key ${o}`);return}}catch(n){console.log("\u274C Error creating/dispatching keyboard event:",n)}console.log(`\u274C No key function found for key ${o} (${String.fromCharCode(o)})`)}verifyProgramLoaded(o){if(console.log("=== VERIFYING PROGRAM LOAD ==="),!window.h){console.log("\u274C No 'h' object available for verification");return}let e=window.h;console.log("=== ANALYZING AVAILABLE FUNCTIONS ===");let t=Object.keys(e);console.log("All available functions:",t);let n=t.filter(i=>i.toLowerCase().includes("run")||i.toLowerCase().includes("exec")||i.toLowerCase().includes("start")||i.toLowerCase().includes("main")||i.toLowerCase().includes("call")||i.toLowerCase().includes("jump"));if(console.log("Potential execution functions:",n),typeof e._main=="function"){console.log("Found _main function, trying to call it...");try{e._main(),console.log("\u2705 Successfully called _main function")}catch(i){console.log("\u274C Error calling _main function:",i)}}let r=["vic20_read_memory","read_memory","memory_read","get_memory","vic20_memory_read","read_byte","get_byte"],s=null;for(let i of r)if(typeof e[i]=="function"){s=e[i],console.log(`Found memory read function: ${i}`);break}if(s){let i=[4097,4608,4096,4609];for(let l of i)try{let a=s(l);console.log(`Memory at 0x${l.toString(16).toUpperCase()}: 0x${a.toString(16).toUpperCase()} (${a})`)}catch(a){console.log(`Error reading memory at 0x${l.toString(16).toUpperCase()}:`,a)}if(o.length>=2){let l=o[0]|o[1]<<8;console.log(`Checking memory starting at load address: 0x${l.toString(16).toUpperCase()}`);for(let a=0;a<Math.min(10,o.length-2);a++)try{let d=l+a,u=o[a+2],g=s(d);console.log(`${u===g?"\u2705":"\u274C"} Memory[0x${d.toString(16).toUpperCase()}]: expected 0x${u.toString(16).toUpperCase()}, got 0x${g.toString(16).toUpperCase()}`)}catch(d){console.log(`Error reading memory at offset ${a}:`,d)}}}else{console.log("\u274C No memory read function found");let i=["vic20_get_state","get_state","get_program_state","get_loaded_program","vic20_program_info","program_info","get_file_info"];for(let l of i)if(typeof e[l]=="function")try{let a=e[l]();console.log(`Program state from ${l}:`,a)}catch(a){console.log(`Error calling ${l}:`,a)}}}forceDisplayRefresh(){if(console.log("\u{1F504} Forcing VIC-20 display refresh..."),this.module){typeof this.module.requestAnimationFrame=="function"&&(console.log("\u2705 Using module.requestAnimationFrame for display refresh"),this.module.requestAnimationFrame(()=>{console.log("\u2705 Display refresh triggered via requestAnimationFrame")}));let o=["refresh","redraw","update","render","display"];for(let e of o)if(typeof this.module[e]=="function"){console.log(`\u2705 Calling module.${e}() for display refresh`);try{this.module[e]()}catch(t){console.log(`\u274C Error calling ${e}:`,t)}}if(typeof this.module._main=="function"){console.log("\u2705 Calling _main again to trigger frame update");try{this.module._main()}catch(e){console.log("\u274C Error calling _main for display refresh:",e)}}}setTimeout(()=>{if(this.canvas){let o=this.canvas.getContext("2d");o&&(o.fillStyle="green",o.fillRect(this.canvas.width-20,10,10,10),o.fillStyle="white",o.font="12px monospace",o.fillText("LOADED",this.canvas.width-80,20),console.log("\u2705 Visual indicator drawn on canvas"))}},500),console.log("\u2705 Display refresh attempts completed")}verifyAndExecuteLoadedROM(o){console.log("\u{1F504} DISABLED: verifyAndExecuteLoadedROM to prevent crashes"),console.log("\u{1F504} Skipping program verification and execution for safety")}triggerProgramExecution(){console.log("\u{1F504} DISABLED: triggerProgramExecution to prevent crashes"),console.log("\u{1F504} Skipping all execution function calls for safety")}callDropFunctionsWithoutMemory(o){console.log("\u{1F504} DISABLED: callDropFunctionsWithoutMemory to prevent crashes"),console.log("\u{1F504} Skipping all drop function calls for safety")}simulateFileReading(o){var a;console.log("\u{1F3AF} === SIMULATING FILE READING (DISABLED FOR SAFETY) ==="),console.log("\u{1F504} Skipping emulator state check to prevent crashes");let e=new Blob([o],{type:"application/octet-stream"}),t=new File([e],"program.prg",{type:"application/octet-stream"});console.log("\u{1F4C1} Created File object:",t.name,t.size,"bytes"),this.module&&this.module.h&&(this.module.h.dd=t,console.log("\u{1F4C1} Stored file in h.dd"));let n=null,r=(a=this.module)==null?void 0:a.h;if(window.t&&window.t instanceof Uint8Array?(n=window.t,console.log("\u2705 Found HEAPU8 via window.t")):window.r&&window.r instanceof Uint8Array?(n=window.r,console.log("\u2705 Found HEAPU8 via window.r")):(r==null?void 0:r.HEAPU8)?(n=r.HEAPU8,console.log("\u2705 Found HEAPU8 via h.HEAPU8")):(r==null?void 0:r.HEAP8)?(n=new Uint8Array(r.HEAP8.buffer),console.log("\u2705 Found HEAPU8 via h.HEAP8 conversion")):(r==null?void 0:r.HEAP)&&(n=new Uint8Array(r.HEAP.buffer),console.log("\u2705 Found HEAPU8 via h.HEAP conversion")),!n){console.error("\u274C No WASM heap available for file reading simulation");return}let s=o[0]|o[1]<<8;console.log(`\u{1F4CD} Load address from PRG header: 0x${s.toString(16).padStart(4,"0")} (${s})`);let i=o.slice(2);console.log(`\u{1F4E6} Program data size: ${i.length} bytes`),console.log("\u{1F50D} DEBUG: Memory contents before loading:");let l=[4096,4097,4120,4608];for(let d of l)try{let u=n[d];console.log(`  - 0x${d.toString(16).padStart(4,"0")}: 0x${u.toString(16).padStart(2,"0")} (before)`)}catch(u){console.log(`  - 0x${d.toString(16).padStart(4,"0")}: <error> (${u})`)}try{n.set(i,s),console.log(`\u2705 Successfully copied ${i.length} bytes to address 0x${s.toString(16).padStart(4,"0")}`)}catch(d){console.error("\u274C Error copying data to WASM heap:",d);return}console.log("\u{1F50D} DEBUG: Memory contents after loading:");for(let d=0;d<Math.min(16,i.length);d++){let u=s+d;try{let g=n[u],m=i[d],y=g===m?"\u2705":"\u274C";console.log(`  - 0x${u.toString(16).padStart(4,"0")}: 0x${g.toString(16).padStart(2,"0")} (expected: 0x${m.toString(16).padStart(2,"0")}) ${y}`)}catch(g){console.log(`  - 0x${u.toString(16).padStart(4,"0")}: <error> (${g})`)}}console.log("\u{1F504} Data copied successfully - skipping drop function calls to avoid conflicts"),setTimeout(()=>{console.log("\u{1F3AF} Triggering execution with key presses..."),this.simulateKeyPress(13)},200),setTimeout(()=>{this.simulateKeyPress(112)},300),setTimeout(()=>{this.simulateKeyPress(114)},400),setTimeout(()=>{this.triggerProgramExecution()},500)}debugMemoryAfterLoading(){console.log("\u{1F50D} DEBUG: Checking memory after loading...");try{let o=window.h;if(!o){console.log("\u274C No 'h' object available for memory check");return}let e=[4096,4097,4120,4608,8192,16384,24576,32768,36864,49152,57344];console.log("\u{1F50D} DEBUG: Memory contents at key addresses:");for(let n of e)try{let r=null;window.t&&typeof window.t[n]!="undefined"?(r=window.t[n],console.log(`  - 0x${n.toString(16).padStart(4,"0")}: 0x${r.toString(16).padStart(2,"0")} (global t)`)):window.r&&typeof window.r[n]!="undefined"?(r=window.r[n],console.log(`  - 0x${n.toString(16).padStart(4,"0")}: 0x${r.toString(16).padStart(2,"0")} (global r)`)):o.HEAPU8&&typeof o.HEAPU8[n]!="undefined"?(r=o.HEAPU8[n],console.log(`  - 0x${n.toString(16).padStart(4,"0")}: 0x${r.toString(16).padStart(2,"0")} (HEAPU8)`)):o.HEAP8&&typeof o.HEAP8[n]!="undefined"?(r=o.HEAP8[n],console.log(`  - 0x${n.toString(16).padStart(4,"0")}: 0x${r.toString(16).padStart(2,"0")} (HEAP8)`)):o.HEAP&&typeof o.HEAP[n]!="undefined"?(r=o.HEAP[n],console.log(`  - 0x${n.toString(16).padStart(4,"0")}: 0x${r.toString(16).padStart(2,"0")} (HEAP)`)):console.log(`  - 0x${n.toString(16).padStart(4,"0")}: <no access> (no heap available)`)}catch(r){console.log(`  - 0x${n.toString(16).padStart(4,"0")}: <error> (${r})`)}console.log("\u{1F50D} DEBUG: Looking for memory reading functions...");let t=Object.keys(o).filter(n=>typeof o[n]=="function"&&(n.toLowerCase().includes("read")||n.toLowerCase().includes("memory")||n.toLowerCase().includes("peek")||n.toLowerCase().includes("get")));if(console.log("  - Available memory functions:",t),t.length>0){let n=t[0];console.log(`\u{1F50D} DEBUG: Testing memory reading with ${n}...`);try{let r=[4096,4097,4098,4099,4100,4101];for(let s of r)try{let i=o[n](s);console.log(`  - ${n}(0x${s.toString(16).padStart(4,"0")}): ${i}`)}catch(i){console.log(`  - ${n}(0x${s.toString(16).padStart(4,"0")}): <error> (${i})`)}}catch(r){console.log(`  - Error testing ${n}:`,r)}}}catch(o){console.log("\u274C Error during memory debugging:",o)}}checkAndResetEmulatorState(){console.log("\u{1F50D} DEBUG: Checking emulator state before loading...");try{let o=window.h;if(!o){console.log("\u274C No 'h' object available for state check");return}console.log("\u{1F50D} DEBUG: Current emulator state:"),console.log("  - calledRun:",o.calledRun),console.log("  - running:",this.running),console.log("  - programLoaded:",this.programLoaded);let e=Object.keys(o).filter(t=>typeof o[t]=="function"&&(t.toLowerCase().includes("reset")||t.toLowerCase().includes("init")||t.toLowerCase().includes("clear")||t.toLowerCase().includes("boot")||t.toLowerCase().includes("start")));if(console.log("\u{1F50D} DEBUG: Available reset/init functions:",e),e.length>0){console.log("\u{1F504} Attempting to reset emulator state...");for(let t of e)try{console.log(`\u{1F3AF} Trying to call ${t}...`),o[t](),console.log(`\u2705 Successfully called ${t}()`),console.log("\u{1F504} Skipping setTimeout to prevent crashes");return}catch(n){console.log(`\u274C Error calling ${t}():`,n)}}if(typeof o._main=="function"){console.log("\u{1F504} Calling _main to ensure emulator is running...");try{o._main(),console.log("\u2705 Called _main successfully")}catch(t){console.log("\u274C Error calling _main:",t)}}if(console.log("\u{1F504} Attempting to clear existing program data..."),window.t)try{console.log("\u{1F504} Skipping memory clearing to prevent crashes")}catch(t){console.log("\u274C Error clearing program area:",t)}}catch(o){console.log("\u274C Error during emulator state check:",o)}}tryDropApproach(o){console.log("\u{1F504} Trying drop approach as fallback...");try{let e=window.h;if(!e){console.log("\u274C No 'h' object available");return}let t=new File([o],"program.prg",{type:"application/octet-stream",lastModified:Date.now()}),n=new DataTransfer;n.items.add(t);let r=new DragEvent("drop",{bubbles:!0,cancelable:!0,dataTransfer:n}),s=null;if(e.xc)s=e.xc,console.log("\u2705 Found canvas through h.xc:",s);else if(e.canvas)s=e.canvas,console.log("\u2705 Found canvas through h.canvas:",s);else{console.log("\u274C No canvas found on h object");return}console.log("\u{1F3AF} Dispatching drop event on canvas:",s);let i=s.dispatchEvent(r);console.log(`\u2705 Drop event dispatched successfully: ${i}`),setTimeout(()=>{console.log("\u{1F504} Drop event should have been processed by now"),console.log("\u{1F3AF} Checking if program is running..."),console.log("\u{1F3AF} Checking calledRun status:",e.calledRun);for(let l=0;l<3;l++){try{typeof e._main=="function"&&(e._main(),console.log(`\u2705 _main called successfully (attempt ${l+1})`))}catch(a){console.log(`\u274C Error calling _main (attempt ${l+1}):`,a)}l<2&&setTimeout(()=>{},100)}},300)}catch(e){console.log("\u274C Error during drop approach:",e)}}addCanvasDragAndDropListeners(){let o=this.canvas;if(!o){let e=window.h;e&&e.canvas?(o=e.canvas,console.log("\u{1F3AF} Using emulator canvas for drag-and-drop listeners")):e&&e.xc?(o=e.xc,console.log("\u{1F3AF} Using emulator xc for drag-and-drop listeners")):(o=document.getElementById("canvas"),console.log("\u{1F3AF} Using document canvas for drag-and-drop listeners"))}if(!o){console.log("\u274C No canvas available for drag-and-drop listeners");return}console.log("\u{1F3AF} Adding drag-and-drop event listeners to canvas for manual file loading...");try{o.addEventListener("dragover",e=>{e.preventDefault(),e.stopPropagation(),console.log("\u{1F3AF} Drag over detected on canvas")}),o.addEventListener("drop",e=>{var n;if(e.preventDefault(),e.stopPropagation(),console.log("\u{1F3AF} Manual drop event detected on canvas"),this.isLoadingProgram){console.log("\u26A0\uFE0F Program already loading, ignoring drop event to prevent infinite loop");return}let t=(n=e.dataTransfer)==null?void 0:n.files;if(t&&t.length>0){let r=t[0];console.log("\u{1F3AF} Manual file dropped:",r.name,r.size,"bytes");let s=new FileReader;s.onload=i=>{var l;if(((l=i.target)==null?void 0:l.result)instanceof ArrayBuffer){let a=new Uint8Array(i.target.result);console.log("\u{1F3AF} Manual file data loaded:",a.length,"bytes"),console.log("\u{1F3AF} First 16 bytes:",Array.from(a.slice(0,16))),this.loadProgram(a)}},s.readAsArrayBuffer(r)}}),console.log("\u2705 Manual drag-and-drop listeners added to canvas")}catch(e){console.log("\u274C Error adding drag-and-drop listeners:",e)}}captureDragAndDropData(){console.log("\u{1F50D} DEBUG: Setting up drag-and-drop capture...");try{let o=window.h;if(!o){console.log("\u274C No 'h' object available");return}let e=o.__sapp_emsc_begin_drop,t=o.__sapp_emsc_drop,n=o.__sapp_emsc_end_drop;o.__sapp_emsc_begin_drop=function(...s){return console.log("\u{1F50D} CAPTURED: __sapp_emsc_begin_drop called with:",s),e.apply(this,s)},o.__sapp_emsc_drop=function(...s){return console.log("\u{1F50D} CAPTURED: __sapp_emsc_drop called with:",s),t.apply(this,s)},o.__sapp_emsc_end_drop=function(...s){return console.log("\u{1F50D} CAPTURED: __sapp_emsc_end_drop called with:",s),n.apply(this,s)};let r=o.dd;Object.defineProperty(o,"dd",{get:function(){return r},set:function(s){console.log("\u{1F50D} CAPTURED: h.dd set to:",s),s&&s.length>0&&(console.log("\u{1F50D} CAPTURED: First file in h.dd:",s[0]),console.log("\u{1F50D} CAPTURED: File size:",s[0].size),console.log("\u{1F50D} CAPTURED: File name:",s[0].name)),r=s}}),console.log("\u2705 Drag-and-drop capture set up. Now try dragging and dropping a file to see the captured data.")}catch(o){console.log("\u274C Error setting up drag-and-drop capture:",o)}}addSimpleFocusProtection(){!this.canvas||console.log("\u2705 Simple focus protection added - no global overrides")}addClickToFocusFunctionality(){!this.canvas||(console.log("\u{1F3AF} Adding click-to-focus functionality to VIC-20 canvas"),this.canvas.tabIndex=0,this.canvas.style.outline="none",this.canvas.addEventListener("click",o=>{var e;o.preventDefault(),o.stopPropagation(),this.emulatorFocused||(this.emulatorFocused=!0,(e=this.canvas)==null||e.focus(),this.canvas.style.border="2px solid #4CAF50",this.canvas.style.cursor="default",console.log("\u{1F3AF} VIC-20 emulator focused - keyboard input enabled"))}),document.addEventListener("click",o=>{this.canvas&&!this.canvas.contains(o.target)&&this.emulatorFocused&&(this.emulatorFocused=!1,this.canvas.style.border="1px solid #333",this.canvas.style.cursor="pointer",console.log("\u{1F3AF} VIC-20 emulator unfocused - keyboard input disabled"))}),this.canvas.addEventListener("keydown",o=>{!this.emulatorFocused||(console.log(`\u{1F3AF} Key pressed in VIC-20 emulator: ${o.key} (keyCode: ${o.keyCode})`),this.forwardKeyEventToEmulator(o))}),this.canvas.addEventListener("keyup",o=>{!this.emulatorFocused||(console.log(`\u{1F3AF} Key released in VIC-20 emulator: ${o.key} (keyCode: ${o.keyCode})`),this.forwardKeyUpEventToEmulator(o))}),console.log("\u2705 Click-to-focus functionality added to VIC-20 canvas"))}forwardKeyEventToEmulator(o){let e=window.h;if(e){if(typeof e._=="function")try{e._(this.canvas,o.keyCode,2,0),console.log("\u{1F3AF} Sent keydown to VIC-20 via _ function with keyCode:",o.keyCode)}catch(t){console.log("\u274C Error sending keydown:",t)}if(typeof e.setKeyInput=="function")try{e.setKeyInput(o.keyCode,o.keyCode,1),console.log("\u{1F3AF} Sent keydown to VIC-20 via setKeyInput with keyCode:",o.keyCode)}catch(t){console.log("\u274C Error sending keydown via setKeyInput:",t)}}}forwardKeyUpEventToEmulator(o){let e=window.h;if(e){if(typeof e.Z=="function")try{e.Z(this.canvas,o.keyCode,3,0),console.log("\u{1F3AF} Sent keyup to VIC-20 via Z function with keyCode:",o.keyCode)}catch(t){console.log("\u274C Error sending keyup:",t)}if(typeof e.setKeyInput=="function")try{e.setKeyInput(o.keyCode,o.keyCode,2),console.log("\u{1F3AF} Sent keyup to VIC-20 via setKeyInput with keyCode:",o.keyCode)}catch(t){console.log("\u274C Error sending keyup via setKeyInput:",t)}}}};var v=[{id:"hello.c",name:"Hello World",category:"C"},{id:"siegegame.c",name:"Siege Game"},{id:"skeleton.cc65",name:"C/CC65 Boilerplate"}],w={main:[{name:"RAM",start:0,size:4096,type:"ram"},{name:"Screen RAM",start:4096,size:1024,type:"ram"},{name:"Color RAM",start:37888,size:1024,type:"io"},{name:"Character ROM",start:32768,size:4096,type:"rom"},{name:"BASIC ROM",start:49152,size:8192,type:"rom"},{name:"KERNAL ROM",start:57344,size:8192,type:"rom"},{name:"VIC I/O",start:36864,size:1024,type:"io"},{name:"VIA 1",start:37136,size:16,type:"io"},{name:"VIA 2",start:37152,size:16,type:"io"}]},f=class{constructor(o){this.running=!1;this.timer=null;this.mainElement=o,this.machine=new p}async start(){console.log("VIC20ChipsPlatform start() called - EMULATOR DISABLED FOR TESTING"),this.mainElement.innerHTML='<iframe id="vic20-iframe" src="vic20-iframe.html" style="width: 100%; height: 500px; border: none;"></iframe>',console.log("VIC20ChipsPlatform: iframe created, setting up with auto-compilation"),setTimeout(()=>{this.setupIframeWithAutoCompilation()},1e3),this.setupCompilationListener()}setupCompilationListener(){let o=window.setCompileOutput;o&&(window.setCompileOutput=e=>{o(e),e&&e.output&&!e.errors&&(console.log("VIC20ChipsPlatform: Compilation detected, reloading iframe"),setTimeout(()=>{this.setupIframeWithAutoCompilation()},500))})}nextFrame(){this.running&&this.machine.advanceFrame(()=>!1)}pause(){this.running=!1,this.timer&&this.timer.stop()}resume(){this.running=!0,this.timer&&this.timer.start()}loadROM(o,e){console.log("VIC20ChipsPlatform loadROM called with title:",o,"and",e.length,"bytes");var t=document.getElementById("vic20-iframe");if(t&&t.contentWindow){let n=window.vic20_debug;if(n&&n.openIframeWithCurrentProgram){let r=n.openIframeWithCurrentProgram();if(console.log("VIC20ChipsPlatform: Generated iframe URL:",r),r){let s="&t="+Date.now(),i=r+s;console.log("VIC20ChipsPlatform: Loading fresh URL with cache buster:",i);let l=()=>{console.log("VIC20ChipsPlatform: iframe loaded, calling checkForProgramInURL"),t.contentWindow.checkForProgramInURL&&t.contentWindow.checkForProgramInURL(),t.removeEventListener("load",l)};t.addEventListener("load",l),t.contentWindow.location=i}else console.error("VIC20ChipsPlatform: openIframeWithCurrentProgram returned null")}else console.error("VIC20ChipsPlatform: vic20_debug not available")}else console.error("VIC20ChipsPlatform: iframe not found or contentWindow not available");this.machine?this.machine.loadProgram(e):console.error("VIC20ChipsPlatform: machine is null!")}setupIframeWithAutoCompilation(){console.log("VIC20ChipsPlatform: Setting up iframe with auto-compilation");var o=document.getElementById("vic20-iframe");if(!o||!o.contentWindow){console.error("VIC20ChipsPlatform: iframe not found or contentWindow not available");return}let e=window.vic20_debug;if(!e||!e.openIframeWithCurrentProgram){console.error("VIC20ChipsPlatform: vic20_debug not available");return}let t=e.openIframeWithCurrentProgram();if(console.log("VIC20ChipsPlatform: Initial iframe URL check:",t),t){console.log("VIC20ChipsPlatform: Found compiled program, loading iframe");let n="&t="+Date.now(),r=t+n;console.log("VIC20ChipsPlatform: Loading fresh URL with cache buster:",r),this.loadIframeWithProgram(r)}else console.log("VIC20ChipsPlatform: No compiled program found, triggering compilation"),this.triggerCompilationAndReload()}loadIframeWithProgram(o){var e=document.getElementById("vic20-iframe");if(!e||!e.contentWindow)return;let t=()=>{console.log("VIC20ChipsPlatform: iframe loaded, calling checkForProgramInURL"),e.contentWindow.checkForProgramInURL&&e.contentWindow.checkForProgramInURL(),e.removeEventListener("load",t)};e.addEventListener("load",t),e.contentWindow.location=o}triggerCompilationAndReload(){var t,n;console.log("VIC20ChipsPlatform: Triggering compilation...");let o=window.worker;if(!o){console.error("VIC20ChipsPlatform: Global worker not found");return}let e=o.onmessage;o.onmessage=r=>{e&&e.call(o,r),r.data&&r.data.output&&(console.log("VIC20ChipsPlatform: Compilation completed, reloading iframe"),setTimeout(()=>{let s=window.vic20_debug;if(s&&s.openIframeWithCurrentProgram){let i=s.openIframeWithCurrentProgram();if(i){let l="&t="+Date.now(),a=i+l;console.log("VIC20ChipsPlatform: Loading fresh URL with cache buster:",a),this.loadIframeWithProgram(a)}}o.onmessage=e},1e3))},o.postMessage?o.postMessage({type:"build",files:((n=(t=window.IDE)==null?void 0:t.getCurrentProject())==null?void 0:n.getFiles())||{}}):(console.error("VIC20ChipsPlatform: Worker postMessage not available"),o.onmessage=e)}getPresets(){return v}getMemoryMap(){return w}getDefaultExtension(){return".c"}getROMExtension(o){if(o&&o.length>=2){let e=o[1]<<8|o[0];if(e>=4096&&e<=65535)return".prg"}return".bin"}readAddress(o){return this.machine.read(o)}writeAddress(o,e){this.machine.write(o,e)}getCPUState(){return this.machine.getCPUState()}saveState(){return this.machine.saveState()}loadState(o){this.machine.loadState(o)}reset(){this.machine.reset()}setKeyInput(o,e,t){this.machine.setKeyInput(o,e,t)}loadControlsState(o){this.machine.loadControlsState(o)}saveControlsState(){return this.machine.saveControlsState()}getFPS(){return this.machine.getFPS()}showHelp(){return"https://8bitworkshop.com/docs/platforms/cbm/index.html#vic-20"}isStable(){return!0}isRunning(){return this.running}getToolForFilename(o){return o.endsWith(".c")?"cc65":o.endsWith(".dasm")?"dasm":o.endsWith(".acme")?"acme":o.endsWith(".wiz")?"wiz":"cc65"}};h.vic20=f;var x=f;export{x as default};
//# sourceMappingURL=vic20-IEGKXNEO.js.map
